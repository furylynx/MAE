def jsonresult = new groovy.json.JsonSlurper().parseText(new File("../../mae.json").text)
def versionstring = ""+jsonresult.version_major+"."+jsonresult.version_minor+"."+jsonresult.version_major

group 'mae'
version versionstring


apply plugin: 'java'
apply plugin: 'application'

import org.gradle.internal.os.OperatingSystem;

sourceCompatibility = 1.8

sourceSets.main.java.srcDirs = ['src/main/java']

mainClassName = "minimallibmaejava.MinimalLibmaeJava"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile "mae:libmae:"+versionstring
    compile "mae:maejavawrapper:"+versionstring
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

run {
    def jnilibpath = "";

    if (project.hasProperty('librarypath') && null != librarypath) {
        jnilibpath = librarypath

        println("Using custom library path: "+jnilibpath)
    } else {
        def jnilibprefixdefault = "/usr"
        def jnilibprefix = "/usr/local"

        if (OperatingSystem.current().isWindows()) {
            jnilibprefix = "C:/Program Files"
        }

        if (project.hasProperty('prefix') && null != prefix) {
            jnilibprefix = prefix
        }

        jnilibpath = jnilibprefixdefault + "/lib/jni/:"+jnilibprefixdefault + "/lib/:"+jnilibprefix + "/lib/jni/:"+jnilibprefix+"/lib/"

        if (project.hasProperty('prefix') && null != prefix) {
            println "Using custom prefix $prefix resulting in the java.library.path $jnilibpath"
        }
    }

    systemProperty 'java.library.path', jnilibpath
}
