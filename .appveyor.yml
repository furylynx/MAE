
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# branches to build
# branches:
#   # blacklist
#   except:
#     - gh-pages

# Do not build on tags (GitHub and BitBucket)
#skip_tags: true

# Build worker image (VM template)
image: Visual Studio 2017

# clone directory
clone_folder: c:\projects\MAE

# fetch repository as zip archive
#shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 1                      # clone entire repository history if not defined

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform:
  - x64
#  - x86

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# build cache to preserve files/folders between builds
cache: c:\tools\vcpkg\installed\

for:
  # -
  #   PACKAGE_MANAGER: MSYS2
  #   INSTALL_COMMAND: ".appveyor\\msys2-install.bat"
  #   BUILD_COMMAND: ".appveyor\\msys2-build.bat"
  #   MSYS2_ARCH: x86_64
  #   MSYSTEM: MINGW64
  #   MPREFIX: "/mingw64/"
  -
    environment:
      PACKAGE_MANAGER: VCPKG
      VCPKG_DEFAULT_TRIPLET: x64-windows
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
    # scripts that run after cloning repository
    install:
      # by default, all script lines are interpreted as batch
      - cinst swig gradle maven jdk8 groovy
      - cinst cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      - refreshenv
      - cd C:\tools\vcpkg
      - git pull
      - .\bootstrap-vcpkg.bat
      - vcpkg integrate install
      - vcpkg install opencv libxmlpp sdl2 sdl2-image sdl2-ttf boost-core boost-asio boost-system
      - cd %APPVEYOR_BUILD_FOLDER%
    # to run your custom scripts instead of automatic MSBuild
    build_script:
      - cd %APPVEYOR_BUILD_FOLDER%\libmae
      - cmake . -DCMAKE_TOOLCHAIN_FILE=C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake -DMAE_STATIC=true -G "%CMAKE_GENERATOR%"
      - cmake --build . --target install --config Release
      - cd %APPVEYOR_BUILD_FOLDER%\libmae_demo
      - cmake . -DCMAKE_TOOLCHAIN_FILE=C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake -DMAE_STATIC=true -G "%CMAKE_GENERATOR%"
      - cmake --build . --target install --config Release
      - cd %APPVEYOR_BUILD_FOLDER%\libmae_eventing
      - cmake . -DCMAKE_TOOLCHAIN_FILE=C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake -DMAE_STATIC=true -G "%CMAKE_GENERATOR%"
      - cmake --build . --target install --config Release


#---------------------------------#
#       build configuration       #
#---------------------------------#


# scripts to run before build
before_build:


# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:
