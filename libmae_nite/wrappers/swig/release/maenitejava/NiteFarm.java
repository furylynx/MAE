/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maenitejava;

import maejava.GeneralSkeleton;
import maejava.GeneralSkeletonVector;
import maejava.StringVector;

public class NiteFarm {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public NiteFarm(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(NiteFarm obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MaeNiteJavaJNI.delete_NiteFarm(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public NiteFarm(NiteControllerVector controllers, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_0(NiteControllerVector.getCPtr(controllers), controllers, max_users, debug), true);
  }

  public NiteFarm(NiteControllerVector controllers, long max_users) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_1(NiteControllerVector.getCPtr(controllers), controllers, max_users), true);
  }

  public NiteFarm(NiteControllerVector controllers) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_2(NiteControllerVector.getCPtr(controllers), controllers), true);
  }

  public NiteFarm(StringVector configs, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_3(StringVector.getCPtr(configs), configs, max_users, debug), true);
  }

  public NiteFarm(StringVector configs, long max_users) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_4(StringVector.getCPtr(configs), configs, max_users), true);
  }

  public NiteFarm(StringVector configs) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_5(StringVector.getCPtr(configs), configs), true);
  }

  public NiteFarm(DeviceInfoVector devices, String config_path, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_6(DeviceInfoVector.getCPtr(devices), devices, config_path, max_users, debug), true);
  }

  public NiteFarm(DeviceInfoVector devices, String config_path, long max_users) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_7(DeviceInfoVector.getCPtr(devices), devices, config_path, max_users), true);
  }

  public NiteFarm(DeviceInfoVector devices, String config_path) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_8(DeviceInfoVector.getCPtr(devices), devices, config_path), true);
  }

  public NiteFarm(String config_path, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_9(config_path, max_users, debug), true);
  }

  public NiteFarm(String config_path, long max_users) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_10(config_path, max_users), true);
  }

  public NiteFarm(String config_path) {
    this(MaeNiteJavaJNI.new_NiteFarm__SWIG_11(config_path), true);
  }

  public void addController(String config_path) {
    MaeNiteJavaJNI.NiteFarm_addController__SWIG_0(swigCPtr, this, config_path);
  }

  public void addController(DeviceInfo devi_info, String config_path) {
    MaeNiteJavaJNI.NiteFarm_addController__SWIG_1(swigCPtr, this, DeviceInfo.getCPtr(devi_info), devi_info, config_path);
  }

  public void addController(NiteController controller) {
    MaeNiteJavaJNI.NiteFarm_addController__SWIG_2(swigCPtr, this, NiteController.getCPtr(controller), controller);
  }

  public GeneralSkeletonVector waitForUpdate(long each_n_frames) {
    return new GeneralSkeletonVector(MaeNiteJavaJNI.NiteFarm_waitForUpdate__SWIG_0(swigCPtr, this, each_n_frames), true);
  }

  public GeneralSkeletonVector waitForUpdate() {
    return new GeneralSkeletonVector(MaeNiteJavaJNI.NiteFarm_waitForUpdate__SWIG_1(swigCPtr, this), true);
  }

  public GeneralSkeletonVectorVector waitForUpdateUnmerged(long each_n_frames) {
    return new GeneralSkeletonVectorVector(MaeNiteJavaJNI.NiteFarm_waitForUpdateUnmerged__SWIG_0(swigCPtr, this, each_n_frames), true);
  }

  public GeneralSkeletonVectorVector waitForUpdateUnmerged() {
    return new GeneralSkeletonVectorVector(MaeNiteJavaJNI.NiteFarm_waitForUpdateUnmerged__SWIG_1(swigCPtr, this), true);
  }

  public GeneralSkeletonVectorGeneralSkeletonVectorVectorPair waitForUpdateBoth(long each_n_frames) {
    return new GeneralSkeletonVectorGeneralSkeletonVectorVectorPair(MaeNiteJavaJNI.NiteFarm_waitForUpdateBoth__SWIG_0(swigCPtr, this, each_n_frames), true);
  }

  public GeneralSkeletonVectorGeneralSkeletonVectorVectorPair waitForUpdateBoth() {
    return new GeneralSkeletonVectorGeneralSkeletonVectorVectorPair(MaeNiteJavaJNI.NiteFarm_waitForUpdateBoth__SWIG_1(swigCPtr, this), true);
  }

  public boolean wasKeyboardHit() {
    return MaeNiteJavaJNI.NiteFarm_wasKeyboardHit(swigCPtr, this);
  }

  public static boolean xnWasKeyboardHit() {
    return MaeNiteJavaJNI.NiteFarm_xnWasKeyboardHit();
  }

  public static DeviceInfoVector listAvailableDeviceInfos() {
    return new DeviceInfoVector(MaeNiteJavaJNI.NiteFarm_listAvailableDeviceInfos(), true);
  }

  public static DeviceInfo getDeviceInfo(String serial_number) {
    long cPtr = MaeNiteJavaJNI.NiteFarm_getDeviceInfo(serial_number);
    return (cPtr == 0) ? null : new DeviceInfo(cPtr, true);
  }

}
