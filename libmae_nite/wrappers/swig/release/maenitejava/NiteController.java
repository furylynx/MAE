/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maenitejava;

import maejava.GeneralSkeleton;
import maejava.GeneralSkeletonVector;

public class NiteController {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public NiteController(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(NiteController obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MaeNiteJavaJNI.delete_NiteController(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public NiteController(String config_path, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_0(config_path, max_users, debug), true);
  }

  public NiteController(String config_path, long max_users) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_1(config_path, max_users), true);
  }

  public NiteController(String config_path) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_2(config_path), true);
  }

  public NiteController(DeviceInfo devi_info, String config_path, long max_users, boolean debug) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_3(DeviceInfo.getCPtr(devi_info), devi_info, config_path, max_users, debug), true);
  }

  public NiteController(DeviceInfo devi_info, String config_path, long max_users) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_4(DeviceInfo.getCPtr(devi_info), devi_info, config_path, max_users), true);
  }

  public NiteController(DeviceInfo devi_info, String config_path) {
    this(MaeNiteJavaJNI.new_NiteController__SWIG_5(DeviceInfo.getCPtr(devi_info), devi_info, config_path), true);
  }

  public GeneralSkeletonVector waitForUpdate(long each_n_frames) {
    return new GeneralSkeletonVector(MaeNiteJavaJNI.NiteController_waitForUpdate__SWIG_0(swigCPtr, this, each_n_frames), true);
  }

  public GeneralSkeletonVector waitForUpdate() {
    return new GeneralSkeletonVector(MaeNiteJavaJNI.NiteController_waitForUpdate__SWIG_1(swigCPtr, this), true);
  }

  public boolean wasKeyboardHit() {
    return MaeNiteJavaJNI.NiteController_wasKeyboardHit(swigCPtr, this);
  }

  public static boolean xnWasKeyboardHit() {
    return MaeNiteJavaJNI.NiteController_xnWasKeyboardHit();
  }

}
