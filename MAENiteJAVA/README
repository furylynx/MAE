Readme
==================

The Movement Analysis Engine is able to analyze movements and provide events based on a 
described movements sequence (Labanotation). The engine can be used by other applications 
for further movement processing and filtering in ambient spaces (i.e., smart environments).

This project is part of the Java bindings for the Nite Controllers of the Movement Analysis 
Engine. It contains the Java wrapper classes that can be used to access the native library.


Installation
==================

This project has no dependencies beyond the standard Java API and the Java wrappers for the 
Movement Analysis Engine (MAEJava). It can be compiled to a jar (currently there is a compiled 
jar in the jar/ folder).

When the wrapper is meant to be used in a project, the native libraries (libmae, libmae_nite) 
must be loaded. This is done automatically. The libraries is required to be known to the project 
(e.g. path to libmae and libmae_nite added to the PATH environment variable).

Since SWIG does currently not support smart pointers when using directors (that enable callbacks
to the Java objects), inheritance from the provided classes is not possible. See Readme of the 
MAEJava project for further information.

Documentation
==================

Currently no JavaDoc comments are generated by SWIG. Thus, for class or function documentation
the C++ documentation should be read. 

See the MAE-Java-Sample project's source code to get an idea on how to use the Movement Analysis Engine
from Java using the provided bindings.
