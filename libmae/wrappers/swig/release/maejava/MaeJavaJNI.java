/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class MaeJavaJNI {

  static {
    try {
        System.loadLibrary("mae");
    } catch (UnsatisfiedLinkError e) {
      System.err.println("Native code library failed to load. \n" + e);
      System.exit(1);
    }
  }

  public final static native int INVALID_BONE_get();
  public final static native int HEAD_get();
  public final static native int LEFT_UPPER_ARM_get();
  public final static native int LEFT_FOREARM_get();
  public final static native int LEFT_WHOLE_ARM_get();
  public final static native int RIGHT_UPPER_ARM_get();
  public final static native int RIGHT_FOREARM_get();
  public final static native int RIGHT_WHOLE_ARM_get();
  public final static native int LEFT_THIGH_get();
  public final static native int LEFT_SHANK_get();
  public final static native int LEFT_WHOLE_LEG_get();
  public final static native int RIGHT_THIGH_get();
  public final static native int RIGHT_SHANK_get();
  public final static native int RIGHT_WHOLE_LEG_get();
  public final static native String EBoneC_str(int jarg1);
  public final static native int EBoneC_toInt(int jarg1);
  public final static native long EBoneC_vec();
  public final static native int EBoneC_parse(String jarg1);
  public final static native long new_EBoneC();
  public final static native void delete_EBoneC(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_empty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_pushBack(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_EBoneVector__SWIG_0();
  public final static native long new_EBoneVector__SWIG_1(long jarg1);
  public final static native long EBoneVector_size(long jarg1, EBoneVector jarg1_);
  public final static native long EBoneVector_capacity(long jarg1, EBoneVector jarg1_);
  public final static native void EBoneVector_reserve(long jarg1, EBoneVector jarg1_, long jarg2);
  public final static native boolean EBoneVector_empty(long jarg1, EBoneVector jarg1_);
  public final static native void EBoneVector_clear(long jarg1, EBoneVector jarg1_);
  public final static native void EBoneVector_pushBack(long jarg1, EBoneVector jarg1_, int jarg2);
  public final static native int EBoneVector_get(long jarg1, EBoneVector jarg1_, int jarg2);
  public final static native void EBoneVector_set(long jarg1, EBoneVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EBoneVector(long jarg1);
  public final static native long new_Bone__SWIG_0();
  public final static native long new_Bone__SWIG_1(int jarg1, String jarg2, int jarg3, int jarg4);
  public final static native long new_Bone__SWIG_2(int jarg1, String jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_Bone__SWIG_3(int jarg1);
  public final static native void delete_Bone(long jarg1);
  public final static native int Bone_getId(long jarg1, Bone jarg1_);
  public final static native String Bone_getName(long jarg1, Bone jarg1_);
  public final static native int Bone_getFrom(long jarg1, Bone jarg1_);
  public final static native int Bone_getTo(long jarg1, Bone jarg1_);
  public final static native boolean Bone_hasMiddleJoint(long jarg1, Bone jarg1_);
  public final static native int Bone_getMiddleJoint(long jarg1, Bone jarg1_);
  public final static native long Bone_defaultBones();
  public final static native int Bone_rESERVEDTOPDOWN_get();
  public final static native int Bone_rESERVEDRIGHTLEFT_get();
  public final static native long new_BoneVector__SWIG_0();
  public final static native long new_BoneVector__SWIG_1(long jarg1);
  public final static native long BoneVector_size(long jarg1, BoneVector jarg1_);
  public final static native long BoneVector_capacity(long jarg1, BoneVector jarg1_);
  public final static native void BoneVector_reserve(long jarg1, BoneVector jarg1_, long jarg2);
  public final static native boolean BoneVector_empty(long jarg1, BoneVector jarg1_);
  public final static native void BoneVector_clear(long jarg1, BoneVector jarg1_);
  public final static native void BoneVector_pushBack(long jarg1, BoneVector jarg1_, long jarg2, Bone jarg2_);
  public final static native long BoneVector_get(long jarg1, BoneVector jarg1_, int jarg2);
  public final static native void BoneVector_set(long jarg1, BoneVector jarg1_, int jarg2, long jarg3, Bone jarg3_);
  public final static native void delete_BoneVector(long jarg1);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_empty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_pushBack(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_GeneralPose();
  public final static native void delete_GeneralPose(long jarg1);
  public final static native void GeneralPose_setDirection(long jarg1, GeneralPose jarg1_, int jarg2, int jarg3);
  public final static native int GeneralPose_getDirection(long jarg1, GeneralPose jarg1_, int jarg2);
  public final static native void GeneralPose_setDistance(long jarg1, GeneralPose jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native double GeneralPose_getDistance(long jarg1, GeneralPose jarg1_, int jarg2, int jarg3);
  public final static native void GeneralPose_setRotation(long jarg1, GeneralPose jarg1_, int jarg2, double jarg3);
  public final static native double GeneralPose_getRotation(long jarg1, GeneralPose jarg1_, int jarg2);
  public final static native long GeneralPose_getBodyParts(long jarg1, GeneralPose jarg1_);
  public final static native long GeneralPose_getDirections(long jarg1, GeneralPose jarg1_);
  public final static native long new_IntList();
  public final static native long IntList_size(long jarg1, IntList jarg1_);
  public final static native boolean IntList_empty(long jarg1, IntList jarg1_);
  public final static native void IntList_clear(long jarg1, IntList jarg1_);
  public final static native void IntList_pushBack(long jarg1, IntList jarg1_, int jarg2);
  public final static native int IntList_get(long jarg1, IntList jarg1_, int jarg2);
  public final static native void delete_IntList(long jarg1);
  public final static native void delete_IPoseListener(long jarg1);
  public final static native void IPoseListener_onPose(long jarg1, IPoseListener jarg1_, int jarg2, long jarg3, GeneralPose jarg3_);
  public final static native long new_GeneralEnrichedPose__SWIG_0();
  public final static native long new_GeneralEnrichedPose__SWIG_1(long jarg1, GeneralPose jarg1_);
  public final static native void delete_GeneralEnrichedPose(long jarg1);
  public final static native void GeneralEnrichedPose_setKeyPose(long jarg1, GeneralEnrichedPose jarg1_, int jarg2, boolean jarg3);
  public final static native boolean GeneralEnrichedPose_isKeyPose(long jarg1, GeneralEnrichedPose jarg1_, int jarg2);
  public final static native void GeneralEnrichedPose_setInMotion(long jarg1, GeneralEnrichedPose jarg1_, int jarg2, boolean jarg3);
  public final static native boolean GeneralEnrichedPose_isInMotion(long jarg1, GeneralEnrichedPose jarg1_, int jarg2);
  public final static native long new_EnrichedPoseList();
  public final static native long EnrichedPoseList_size(long jarg1, EnrichedPoseList jarg1_);
  public final static native boolean EnrichedPoseList_empty(long jarg1, EnrichedPoseList jarg1_);
  public final static native void EnrichedPoseList_clear(long jarg1, EnrichedPoseList jarg1_);
  public final static native void EnrichedPoseList_pushBack(long jarg1, EnrichedPoseList jarg1_, long jarg2, GeneralEnrichedPose jarg2_);
  public final static native long EnrichedPoseList_get(long jarg1, EnrichedPoseList jarg1_, int jarg2);
  public final static native void delete_EnrichedPoseList(long jarg1);
  public final static native long new_Hierarchy__SWIG_0();
  public final static native long new_Hierarchy__SWIG_1(long jarg1, HierarchyElement jarg1_);
  public final static native void delete_Hierarchy(long jarg1);
  public final static native long Hierarchy_getRoot(long jarg1, Hierarchy jarg1_);
  public final static native void Hierarchy_setRoot(long jarg1, Hierarchy jarg1_, long jarg2, HierarchyElement jarg2_);
  public final static native long Hierarchy_getElementSequence(long jarg1, Hierarchy jarg1_);
  public final static native long Hierarchy_at(long jarg1, Hierarchy jarg1_, int jarg2);
  public final static native String Hierarchy_str(long jarg1, Hierarchy jarg1_);
  public final static native long Hierarchy_defaultHierarchy();
  public final static native long new_HierarchyElementVector__SWIG_0();
  public final static native long new_HierarchyElementVector__SWIG_1(long jarg1);
  public final static native long HierarchyElementVector_size(long jarg1, HierarchyElementVector jarg1_);
  public final static native long HierarchyElementVector_capacity(long jarg1, HierarchyElementVector jarg1_);
  public final static native void HierarchyElementVector_reserve(long jarg1, HierarchyElementVector jarg1_, long jarg2);
  public final static native boolean HierarchyElementVector_empty(long jarg1, HierarchyElementVector jarg1_);
  public final static native void HierarchyElementVector_clear(long jarg1, HierarchyElementVector jarg1_);
  public final static native void HierarchyElementVector_pushBack(long jarg1, HierarchyElementVector jarg1_, long jarg2, HierarchyElement jarg2_);
  public final static native long HierarchyElementVector_get(long jarg1, HierarchyElementVector jarg1_, int jarg2);
  public final static native void HierarchyElementVector_set(long jarg1, HierarchyElementVector jarg1_, int jarg2, long jarg3, HierarchyElement jarg3_);
  public final static native void delete_HierarchyElementVector(long jarg1);
  public final static native long new_HierarchyElement__SWIG_0(int jarg1, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_HierarchyElement__SWIG_1(int jarg1, String jarg2, boolean jarg3);
  public final static native long new_HierarchyElement__SWIG_2(int jarg1, String jarg2);
  public final static native void delete_HierarchyElement(long jarg1);
  public final static native int HierarchyElement_getId(long jarg1, HierarchyElement jarg1_);
  public final static native String HierarchyElement_getName(long jarg1, HierarchyElement jarg1_);
  public final static native boolean HierarchyElement_isTorsoJoint(long jarg1, HierarchyElement jarg1_);
  public final static native boolean HierarchyElement_isDummy(long jarg1, HierarchyElement jarg1_);
  public final static native long HierarchyElement_getParent(long jarg1, HierarchyElement jarg1_);
  public final static native boolean HierarchyElement_isParent(long jarg1, HierarchyElement jarg1_);
  public final static native boolean HierarchyElement_isParentOf(long jarg1, HierarchyElement jarg1_, int jarg2);
  public final static native long HierarchyElement_getChildren(long jarg1, HierarchyElement jarg1_);
  public final static native void HierarchyElement_pushFront__SWIG_0(long jarg1, HierarchyElement jarg1_, long jarg2, HierarchyElement jarg2_, boolean jarg3);
  public final static native void HierarchyElement_pushFront__SWIG_1(long jarg1, HierarchyElement jarg1_, long jarg2, HierarchyElement jarg2_);
  public final static native void HierarchyElement_insert__SWIG_0(long jarg1, HierarchyElement jarg1_, long jarg2, long jarg3, HierarchyElement jarg3_, boolean jarg4);
  public final static native void HierarchyElement_insert__SWIG_1(long jarg1, HierarchyElement jarg1_, long jarg2, long jarg3, HierarchyElement jarg3_);
  public final static native void HierarchyElement_pushBack__SWIG_0(long jarg1, HierarchyElement jarg1_, long jarg2, HierarchyElement jarg2_, boolean jarg3);
  public final static native void HierarchyElement_pushBack__SWIG_1(long jarg1, HierarchyElement jarg1_, long jarg2, HierarchyElement jarg2_);
  public final static native void HierarchyElement_erase__SWIG_0(long jarg1, HierarchyElement jarg1_, int jarg2, boolean jarg3);
  public final static native void HierarchyElement_erase__SWIG_1(long jarg1, HierarchyElement jarg1_, int jarg2);
  public final static native void HierarchyElement_eraseAt__SWIG_0(long jarg1, HierarchyElement jarg1_, long jarg2, boolean jarg3);
  public final static native void HierarchyElement_eraseAt__SWIG_1(long jarg1, HierarchyElement jarg1_, long jarg2);
  public final static native void HierarchyElement_clear__SWIG_0(long jarg1, HierarchyElement jarg1_, boolean jarg2);
  public final static native void HierarchyElement_clear__SWIG_1(long jarg1, HierarchyElement jarg1_);
  public final static native long HierarchyElement_getElementSequence(long jarg1, HierarchyElement jarg1_);
  public final static native String HierarchyElement_str__SWIG_0(long jarg1, HierarchyElement jarg1_, int jarg2);
  public final static native String HierarchyElement_str__SWIG_1(long jarg1, HierarchyElement jarg1_);
  public final static native long new_Vec3d__SWIG_0();
  public final static native long new_Vec3d__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native void delete_Vec3d(long jarg1);
  public final static native void Vec3d_setX(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_getX(long jarg1, Vec3d jarg1_);
  public final static native void Vec3d_setY(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_getY(long jarg1, Vec3d jarg1_);
  public final static native void Vec3d_setZ(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_getZ(long jarg1, Vec3d jarg1_);
  public final static native String Vec3d_str(long jarg1, Vec3d jarg1_);
  public final static native void delete_GeneralJoint(long jarg1);
  public final static native long new_GeneralJoint__SWIG_0();
  public final static native long new_GeneralJoint__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_GeneralJoint__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_GeneralJoint__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long new_GeneralJoint__SWIG_4(long jarg1, Vec3d jarg1_, double jarg2, double jarg3);
  public final static native long new_GeneralJoint__SWIG_5(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native long new_GeneralJoint__SWIG_6(long jarg1, Vec3d jarg1_);
  public final static native void GeneralJoint_setX(long jarg1, GeneralJoint jarg1_, double jarg2);
  public final static native double GeneralJoint_getX(long jarg1, GeneralJoint jarg1_);
  public final static native void GeneralJoint_setY(long jarg1, GeneralJoint jarg1_, double jarg2);
  public final static native double GeneralJoint_getY(long jarg1, GeneralJoint jarg1_);
  public final static native void GeneralJoint_setZ(long jarg1, GeneralJoint jarg1_, double jarg2);
  public final static native double GeneralJoint_getZ(long jarg1, GeneralJoint jarg1_);
  public final static native void GeneralJoint_setValid(long jarg1, GeneralJoint jarg1_, boolean jarg2);
  public final static native boolean GeneralJoint_isValid(long jarg1, GeneralJoint jarg1_);
  public final static native void GeneralJoint_setConfidence(long jarg1, GeneralJoint jarg1_, double jarg2);
  public final static native double GeneralJoint_getConfidence(long jarg1, GeneralJoint jarg1_);
  public final static native void GeneralJoint_setRotation(long jarg1, GeneralJoint jarg1_, double jarg2);
  public final static native double GeneralJoint_getRotation(long jarg1, GeneralJoint jarg1_);
  public final static native long GeneralJoint_vec(long jarg1, GeneralJoint jarg1_);
  public final static native boolean GeneralJoint_equalsVal(long jarg1, GeneralJoint jarg1_, long jarg2, GeneralJoint jarg2_);
  public final static native boolean GeneralJoint_equals(long jarg1, GeneralJoint jarg1_, long jarg2, GeneralJoint jarg2_);
  public final static native String GeneralJoint_str(long jarg1, GeneralJoint jarg1_);
  public final static native long new_Basis__SWIG_0();
  public final static native long new_Basis__SWIG_1(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_);
  public final static native void delete_Basis(long jarg1);
  public final static native long Basis_getU(long jarg1, Basis jarg1_);
  public final static native long Basis_getR(long jarg1, Basis jarg1_);
  public final static native long Basis_getT(long jarg1, Basis jarg1_);
  public final static native long Basis_getPositionVector(long jarg1, Basis jarg1_);
  public final static native void Basis_setU(long jarg1, Basis jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Basis_setR(long jarg1, Basis jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Basis_setT(long jarg1, Basis jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Basis_setPositionVector(long jarg1, Basis jarg1_, long jarg2, Vec3d jarg2_);
  public final static native String Basis_str(long jarg1, Basis jarg1_);
  public final static native long new_GeneralSkeleton__SWIG_0();
  public final static native long new_GeneralSkeleton__SWIG_1(long jarg1, Hierarchy jarg1_);
  public final static native void delete_GeneralSkeleton(long jarg1);
  public final static native void GeneralSkeleton_setJoint(long jarg1, GeneralSkeleton jarg1_, int jarg2, long jarg3, GeneralJoint jarg3_);
  public final static native long GeneralSkeleton_getJoint(long jarg1, GeneralSkeleton jarg1_, int jarg2);
  public final static native long GeneralSkeleton_getHierarchy(long jarg1, GeneralSkeleton jarg1_);
  public final static native void GeneralSkeleton_setHierarchy(long jarg1, GeneralSkeleton jarg1_, long jarg2, Hierarchy jarg2_);
  public final static native void GeneralSkeleton_setTopDown(long jarg1, GeneralSkeleton jarg1_, long jarg2, Bone jarg2_);
  public final static native long GeneralSkeleton_getTopDown(long jarg1, GeneralSkeleton jarg1_);
  public final static native void GeneralSkeleton_setRightLeft(long jarg1, GeneralSkeleton jarg1_, long jarg2, Bone jarg2_);
  public final static native long GeneralSkeleton_getRightLeft(long jarg1, GeneralSkeleton jarg1_);
  public final static native void GeneralSkeleton_setWeight(long jarg1, GeneralSkeleton jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long GeneralSkeleton_getWeight(long jarg1, GeneralSkeleton jarg1_);
  public final static native String GeneralSkeleton_str(long jarg1, GeneralSkeleton jarg1_);
  public final static native String GeneralSkeleton_plyStr(long jarg1, GeneralSkeleton jarg1_);
  public final static native void GeneralSkeleton_plyFile(long jarg1, GeneralSkeleton jarg1_, String jarg2);
  public final static native long new_FlSkeleton();
  public final static native void delete_FlSkeleton(long jarg1);
  public final static native void FlSkeleton_setTorsoBasis(long jarg1, FlSkeleton jarg1_, long jarg2, Basis jarg2_);
  public final static native long FlSkeleton_getTorsoBasis(long jarg1, FlSkeleton jarg1_);
  public final static native void FlSkeleton_setOrigSkeleton(long jarg1, FlSkeleton jarg1_, long jarg2, GeneralSkeleton jarg2_);
  public final static native long FlSkeleton_getOrigSkeleton(long jarg1, FlSkeleton jarg1_);
  public final static native String FlSkeleton_str(long jarg1, FlSkeleton jarg1_);
  public final static native void delete_FlSkeletonPoseDetector(long jarg1);
  public final static native long FlSkeletonPoseDetector_pose(long jarg1, FlSkeletonPoseDetector jarg1_, long jarg2, FlSkeleton jarg2_, long jarg3, BoneVector jarg3_, long jarg4, GeneralPose jarg4_);
  public final static native long new_FlPoseDetector__SWIG_0(double jarg1, boolean jarg2);
  public final static native long new_FlPoseDetector__SWIG_1(double jarg1);
  public final static native long new_FlPoseDetector__SWIG_2();
  public final static native void delete_FlPoseDetector(long jarg1);
  public final static native void FlPoseDetector_setHysteresisVal(long jarg1, FlPoseDetector jarg1_, double jarg2);
  public final static native double FlPoseDetector_getHysteresisVal(long jarg1, FlPoseDetector jarg1_);
  public final static native long FlPoseDetector_pose(long jarg1, FlPoseDetector jarg1_, long jarg2, FlSkeleton jarg2_, long jarg3, BoneVector jarg3_, long jarg4, GeneralPose jarg4_);
  public final static native long FlPoseDetector_vectorPose(long jarg1, FlPoseDetector jarg1_, long jarg2, FlSkeleton jarg2_, long jarg3, BoneVector jarg3_, long jarg4, GeneralPose jarg4_);
  public final static native double FlPoseDetector_defaultHysteresisVal();
  public final static native void delete_IPreSign(long jarg1);
  public final static native String IPreSign_xml__SWIG_0(long jarg1, IPreSign jarg1_, long jarg2, String jarg3);
  public final static native String IPreSign_xml__SWIG_1(long jarg1, IPreSign jarg1_, long jarg2);
  public final static native String IPreSign_xml__SWIG_2(long jarg1, IPreSign jarg1_);
  public final static native String IPreSign_svg__SWIG_0(long jarg1, IPreSign jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String IPreSign_svg__SWIG_1(long jarg1, IPreSign jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean IPreSign_equals(long jarg1, IPreSign jarg1_, long jarg2, IPreSign jarg2_);
  public final static native long new_ColumnDefinition__SWIG_0(int jarg1, long jarg2, IPreSign jarg2_);
  public final static native long new_ColumnDefinition__SWIG_1(int jarg1);
  public final static native void delete_ColumnDefinition(long jarg1);
  public final static native int ColumnDefinition_getColumnIndex(long jarg1, ColumnDefinition jarg1_);
  public final static native long ColumnDefinition_getPreSign(long jarg1, ColumnDefinition jarg1_);
  public final static native String ColumnDefinition_xml__SWIG_0(long jarg1, ColumnDefinition jarg1_, long jarg2, String jarg3);
  public final static native String ColumnDefinition_xml__SWIG_1(long jarg1, ColumnDefinition jarg1_, long jarg2);
  public final static native String ColumnDefinition_xml__SWIG_2(long jarg1, ColumnDefinition jarg1_);
  public final static native String ColumnDefinition_svg(long jarg1, ColumnDefinition jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native boolean ColumnDefinition_equals(long jarg1, ColumnDefinition jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native long ColumnDefinition_defaultDefinitions();
  public final static native long new_ColumnDefinitionVector__SWIG_0();
  public final static native long new_ColumnDefinitionVector__SWIG_1(long jarg1);
  public final static native long ColumnDefinitionVector_size(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native long ColumnDefinitionVector_capacity(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native void ColumnDefinitionVector_reserve(long jarg1, ColumnDefinitionVector jarg1_, long jarg2);
  public final static native boolean ColumnDefinitionVector_empty(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native void ColumnDefinitionVector_clear(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native void ColumnDefinitionVector_pushBack(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native long ColumnDefinitionVector_get(long jarg1, ColumnDefinitionVector jarg1_, int jarg2);
  public final static native void ColumnDefinitionVector_set(long jarg1, ColumnDefinitionVector jarg1_, int jarg2, long jarg3, ColumnDefinition jarg3_);
  public final static native void delete_ColumnDefinitionVector(long jarg1);
  public final static native void delete_IMovement(long jarg1);
  public final static native int IMovement_getColumn(long jarg1, IMovement jarg1_);
  public final static native long IMovement_getMeasure(long jarg1, IMovement jarg1_);
  public final static native double IMovement_getBeat(long jarg1, IMovement jarg1_);
  public final static native double IMovement_getDuration(long jarg1, IMovement jarg1_);
  public final static native boolean IMovement_equals(long jarg1, IMovement jarg1_, long jarg2, IMovement jarg2_);
  public final static native boolean IMovement_symbolEquals(long jarg1, IMovement jarg1_, long jarg2, IMovement jarg2_);
  public final static native String IMovement_xml__SWIG_0(long jarg1, IMovement jarg1_, long jarg2, String jarg3);
  public final static native String IMovement_xml__SWIG_1(long jarg1, IMovement jarg1_, long jarg2);
  public final static native String IMovement_xml__SWIG_2(long jarg1, IMovement jarg1_);
  public final static native String IMovement_svg(long jarg1, IMovement jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long IMovement_recreate(long jarg1, IMovement jarg1_, long jarg2, IntIntMap jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native String IMovement_str(long jarg1, IMovement jarg1_);
  public final static native long new_IntIntMap__SWIG_0();
  public final static native long new_IntIntMap__SWIG_1(long jarg1, IntIntMap jarg1_);
  public final static native long IntIntMap_size(long jarg1, IntIntMap jarg1_);
  public final static native boolean IntIntMap_empty(long jarg1, IntIntMap jarg1_);
  public final static native void IntIntMap_clear(long jarg1, IntIntMap jarg1_);
  public final static native int IntIntMap_get(long jarg1, IntIntMap jarg1_, int jarg2);
  public final static native void IntIntMap_set(long jarg1, IntIntMap jarg1_, int jarg2, int jarg3);
  public final static native void IntIntMap_del(long jarg1, IntIntMap jarg1_, int jarg2);
  public final static native boolean IntIntMap_hasKey(long jarg1, IntIntMap jarg1_, int jarg2);
  public final static native void delete_IntIntMap(long jarg1);
  public final static native String ETimeUnitC_str(int jarg1);
  public final static native long ETimeUnitC_vec();
  public final static native int ETimeUnitC_parse(String jarg1);
  public final static native long new_ETimeUnitC();
  public final static native void delete_ETimeUnitC(long jarg1);
  public final static native long new_ETimeUnitVector__SWIG_0();
  public final static native long new_ETimeUnitVector__SWIG_1(long jarg1);
  public final static native long ETimeUnitVector_size(long jarg1, ETimeUnitVector jarg1_);
  public final static native long ETimeUnitVector_capacity(long jarg1, ETimeUnitVector jarg1_);
  public final static native void ETimeUnitVector_reserve(long jarg1, ETimeUnitVector jarg1_, long jarg2);
  public final static native boolean ETimeUnitVector_empty(long jarg1, ETimeUnitVector jarg1_);
  public final static native void ETimeUnitVector_clear(long jarg1, ETimeUnitVector jarg1_);
  public final static native void ETimeUnitVector_pushBack(long jarg1, ETimeUnitVector jarg1_, int jarg2);
  public final static native int ETimeUnitVector_get(long jarg1, ETimeUnitVector jarg1_, int jarg2);
  public final static native void ETimeUnitVector_set(long jarg1, ETimeUnitVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ETimeUnitVector(long jarg1);
  public final static native long new_LabanSequence__SWIG_0();
  public final static native long new_LabanSequence__SWIG_1(String jarg1, String jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void delete_LabanSequence(long jarg1);
  public final static native String LabanSequence_getVersion(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setAuthors(long jarg1, LabanSequence jarg1_, long jarg2, StringVector jarg2_);
  public final static native void LabanSequence_addAuthor(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native long LabanSequence_getAuthors(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setTitle(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native String LabanSequence_getTitle(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setDescription(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native String LabanSequence_getDescription(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setMeasures(long jarg1, LabanSequence jarg1_, long jarg2);
  public final static native long LabanSequence_getMeasures(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setTimeUnit(long jarg1, LabanSequence jarg1_, int jarg2);
  public final static native int LabanSequence_getTimeUnit(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setBeatDuration(long jarg1, LabanSequence jarg1_, long jarg2);
  public final static native long LabanSequence_getBeatDuration(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setBeats(long jarg1, LabanSequence jarg1_, long jarg2);
  public final static native long LabanSequence_getBeats(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setColumnDefinitions(long jarg1, LabanSequence jarg1_, long jarg2, ColumnDefinitionVector jarg2_);
  public final static native void LabanSequence_addColumnDefinition(long jarg1, LabanSequence jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native long LabanSequence_getColumnDefinitions(long jarg1, LabanSequence jarg1_);
  public final static native long LabanSequence_getColumnDefinition(long jarg1, LabanSequence jarg1_, int jarg2);
  public final static native void LabanSequence_clearColumnDefinitions(long jarg1, LabanSequence jarg1_);
  public final static native long LabanSequence_getColumns(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_setMovements(long jarg1, LabanSequence jarg1_, long jarg2, IMovementVector jarg2_);
  public final static native long LabanSequence_getMovements(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_addMovement(long jarg1, LabanSequence jarg1_, long jarg2, IMovement jarg2_);
  public final static native long LabanSequence_getColumnMovements(long jarg1, LabanSequence jarg1_, int jarg2);
  public final static native long LabanSequence_getLastMovement(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_clearMovements(long jarg1, LabanSequence jarg1_);
  public final static native String LabanSequence_xml__SWIG_0(long jarg1, LabanSequence jarg1_, boolean jarg2, long jarg3, String jarg4);
  public final static native String LabanSequence_xml__SWIG_1(long jarg1, LabanSequence jarg1_, boolean jarg2, long jarg3);
  public final static native String LabanSequence_xml__SWIG_2(long jarg1, LabanSequence jarg1_, boolean jarg2);
  public final static native String LabanSequence_xml__SWIG_3(long jarg1, LabanSequence jarg1_);
  public final static native String LabanSequence_xmlNamespaceHeader__SWIG_0(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native String LabanSequence_xmlNamespaceHeader__SWIG_1(long jarg1, LabanSequence jarg1_);
  public final static native String LabanSequence_xmlSchemaLocation(long jarg1, LabanSequence jarg1_);
  public final static native String LabanSequence_xmlNamespaceUri(long jarg1, LabanSequence jarg1_);
  public final static native void LabanSequence_xmlFile(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native String LabanSequence_svg(long jarg1, LabanSequence jarg1_, long jarg2, long jarg3);
  public final static native void LabanSequence_svgFile__SWIG_0(long jarg1, LabanSequence jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void LabanSequence_svgFile__SWIG_1(long jarg1, LabanSequence jarg1_, String jarg2, long jarg3);
  public final static native void LabanSequence_svgFile__SWIG_2(long jarg1, LabanSequence jarg1_, String jarg2);
  public final static native String LabanSequence_str(long jarg1, LabanSequence jarg1_);
  public final static native long LabanSequence_defaultBeatDuration();
  public final static native long LabanSequence_defaultBeatsPerMeasure();
  public final static native int LabanSequence_defaultTimeUnit();
  public final static native long LabanSequence_defaultColumns();
  public final static native long new_IMovementVector__SWIG_0();
  public final static native long new_IMovementVector__SWIG_1(long jarg1);
  public final static native long IMovementVector_size(long jarg1, IMovementVector jarg1_);
  public final static native long IMovementVector_capacity(long jarg1, IMovementVector jarg1_);
  public final static native void IMovementVector_reserve(long jarg1, IMovementVector jarg1_, long jarg2);
  public final static native boolean IMovementVector_empty(long jarg1, IMovementVector jarg1_);
  public final static native void IMovementVector_clear(long jarg1, IMovementVector jarg1_);
  public final static native void IMovementVector_pushBack(long jarg1, IMovementVector jarg1_, long jarg2, IMovement jarg2_);
  public final static native long IMovementVector_get(long jarg1, IMovementVector jarg1_, int jarg2);
  public final static native void IMovementVector_set(long jarg1, IMovementVector jarg1_, int jarg2, long jarg3, IMovement jarg3_);
  public final static native void delete_IMovementVector(long jarg1);
  public final static native void delete_IMovementDecisionMaker(long jarg1);
  public final static native void IMovementDecisionMaker_setRecognitionTolerance(long jarg1, IMovementDecisionMaker jarg1_, double jarg2);
  public final static native double IMovementDecisionMaker_getRecognitionTolerance(long jarg1, IMovementDecisionMaker jarg1_);
  public final static native boolean IMovementDecisionMaker_decideMatch(long jarg1, IMovementDecisionMaker jarg1_, long jarg2, IMovement jarg2_, long jarg3, IMovement jarg3_, long jarg4, IMovement jarg4_, long jarg5, IMovement jarg5_);
  public final static native boolean IMovementDecisionMaker_decideInsertion(long jarg1, IMovementDecisionMaker jarg1_, long jarg2, IMovement jarg2_, long jarg3, IMovement jarg3_, long jarg4, IMovement jarg4_, long jarg5, IMovement jarg5_);
  public final static native boolean IMovementDecisionMaker_positionOkay(long jarg1, IMovementDecisionMaker jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native long new_RewritingForest__SWIG_0(long jarg1, long jarg2, int jarg3, double jarg4);
  public final static native long new_RewritingForest__SWIG_1(long jarg1, long jarg2, int jarg3);
  public final static native long new_RewritingForest__SWIG_2(long jarg1, long jarg2);
  public final static native long new_RewritingForest__SWIG_3(long jarg1);
  public final static native long new_RewritingForest__SWIG_4();
  public final static native long new_RewritingForest__SWIG_5(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2, long jarg3, int jarg4, double jarg5);
  public final static native long new_RewritingForest__SWIG_6(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long new_RewritingForest__SWIG_7(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2, long jarg3);
  public final static native long new_RewritingForest__SWIG_8(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2);
  public final static native long new_RewritingForest__SWIG_9(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_);
  public final static native void delete_RewritingForest(long jarg1);
  public final static native double RewritingForest_getTolerance(long jarg1, RewritingForest jarg1_);
  public final static native void RewritingForest_setTolerance(long jarg1, RewritingForest jarg1_, double jarg2);
  public final static native long RewritingForest_replacements(long jarg1, RewritingForest jarg1_, long jarg2, IMovementVector jarg2_);
  public final static native void RewritingForest_addRule__SWIG_0(long jarg1, RewritingForest jarg1_, long jarg2, IMovementVector jarg2_, long jarg3);
  public final static native void RewritingForest_addRule__SWIG_1(long jarg1, RewritingForest jarg1_, long jarg2);
  public final static native String RewritingForest_str(long jarg1, RewritingForest jarg1_);
  public final static native long new_IMovementVectorVector__SWIG_0();
  public final static native long new_IMovementVectorVector__SWIG_1(long jarg1);
  public final static native long IMovementVectorVector_size(long jarg1, IMovementVectorVector jarg1_);
  public final static native long IMovementVectorVector_capacity(long jarg1, IMovementVectorVector jarg1_);
  public final static native void IMovementVectorVector_reserve(long jarg1, IMovementVectorVector jarg1_, long jarg2);
  public final static native boolean IMovementVectorVector_empty(long jarg1, IMovementVectorVector jarg1_);
  public final static native void IMovementVectorVector_clear(long jarg1, IMovementVectorVector jarg1_);
  public final static native void IMovementVectorVector_pushBack(long jarg1, IMovementVectorVector jarg1_, long jarg2, IMovementVector jarg2_);
  public final static native long IMovementVectorVector_get(long jarg1, IMovementVectorVector jarg1_, int jarg2);
  public final static native void IMovementVectorVector_set(long jarg1, IMovementVectorVector jarg1_, int jarg2, long jarg3, IMovementVector jarg3_);
  public final static native void delete_IMovementVectorVector(long jarg1);
  public final static native long new_IMovementVectorVectorDecisionValue__SWIG_0(long jarg1, IMovementVector jarg1_, long jarg2);
  public final static native long new_IMovementVectorVectorDecisionValue__SWIG_1(long jarg1);
  public final static native void delete_IMovementVectorVectorDecisionValue(long jarg1);
  public final static native long IMovementVectorVectorDecisionValue_getSequence(long jarg1, IMovementVectorVectorDecisionValue jarg1_);
  public final static native long IMovementVectorVectorDecisionValue_getValue(long jarg1, IMovementVectorVectorDecisionValue jarg1_);
  public final static native long new_IMovementVectorVectorDecisionValueVector__SWIG_0();
  public final static native long new_IMovementVectorVectorDecisionValueVector__SWIG_1(long jarg1);
  public final static native long IMovementVectorVectorDecisionValueVector_size(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_);
  public final static native long IMovementVectorVectorDecisionValueVector_capacity(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_);
  public final static native void IMovementVectorVectorDecisionValueVector_reserve(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2);
  public final static native boolean IMovementVectorVectorDecisionValueVector_empty(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_);
  public final static native void IMovementVectorVectorDecisionValueVector_clear(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_);
  public final static native void IMovementVectorVectorDecisionValueVector_pushBack(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, long jarg2);
  public final static native long IMovementVectorVectorDecisionValueVector_get(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, int jarg2);
  public final static native void IMovementVectorVectorDecisionValueVector_set(long jarg1, IMovementVectorVectorDecisionValueVector jarg1_, int jarg2, long jarg3);
  public final static native void delete_IMovementVectorVectorDecisionValueVector(long jarg1);
  public final static native long new_DecisionForest__SWIG_0(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, RewritingForest jarg8_, boolean jarg9);
  public final static native long new_DecisionForest__SWIG_1(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, RewritingForest jarg8_);
  public final static native long new_DecisionForest__SWIG_2(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4, int jarg5, double jarg6, long jarg7);
  public final static native long new_DecisionForest__SWIG_3(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4, int jarg5, double jarg6);
  public final static native long new_DecisionForest__SWIG_4(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native long new_DecisionForest__SWIG_5(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3, long jarg4);
  public final static native long new_DecisionForest__SWIG_6(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_, long jarg3);
  public final static native long new_DecisionForest__SWIG_7(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, IntVector jarg2_);
  public final static native long new_DecisionForest__SWIG_8(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native long new_DecisionForest__SWIG_9();
  public final static native void delete_DecisionForest(long jarg1);
  public final static native void DecisionForest_setRecognitionTolerance(long jarg1, DecisionForest jarg1_, double jarg2);
  public final static native void DecisionForest_setCooldown(long jarg1, DecisionForest jarg1_, boolean jarg2);
  public final static native boolean DecisionForest_getCooldown(long jarg1, DecisionForest jarg1_);
  public final static native int DecisionForest_getSequenceLength(long jarg1, DecisionForest jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native void DecisionForest_addSequence(long jarg1, DecisionForest jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean DecisionForest_removeSequence__SWIG_0(long jarg1, DecisionForest jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean DecisionForest_removeSequence__SWIG_1(long jarg1, DecisionForest jarg1_, long jarg2);
  public final static native void DecisionForest_clear(long jarg1, DecisionForest jarg1_);
  public final static native void DecisionForest_addRewritingRule__SWIG_0(long jarg1, DecisionForest jarg1_, long jarg2, IMovementVector jarg2_, long jarg3);
  public final static native void DecisionForest_addRewritingRule__SWIG_1(long jarg1, DecisionForest jarg1_, long jarg2);
  public final static native long DecisionForest_recreateSequence(long jarg1, DecisionForest jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native long DecisionForest_getSequences(long jarg1, DecisionForest jarg1_);
  public final static native long DecisionForest_findSubmatches(long jarg1, DecisionForest jarg1_, long jarg2, LabanSequence jarg2_, long jarg3, BoneVector jarg3_);
  public final static native String DecisionForest_str(long jarg1, DecisionForest jarg1_);
  public final static native long new_LabanSequenceVector__SWIG_0();
  public final static native long new_LabanSequenceVector__SWIG_1(long jarg1);
  public final static native long LabanSequenceVector_size(long jarg1, LabanSequenceVector jarg1_);
  public final static native long LabanSequenceVector_capacity(long jarg1, LabanSequenceVector jarg1_);
  public final static native void LabanSequenceVector_reserve(long jarg1, LabanSequenceVector jarg1_, long jarg2);
  public final static native boolean LabanSequenceVector_empty(long jarg1, LabanSequenceVector jarg1_);
  public final static native void LabanSequenceVector_clear(long jarg1, LabanSequenceVector jarg1_);
  public final static native void LabanSequenceVector_pushBack(long jarg1, LabanSequenceVector jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native long LabanSequenceVector_get(long jarg1, LabanSequenceVector jarg1_, int jarg2);
  public final static native void LabanSequenceVector_set(long jarg1, LabanSequenceVector jarg1_, int jarg2, long jarg3, LabanSequence jarg3_);
  public final static native void delete_LabanSequenceVector(long jarg1);
  public final static native long new_LabanSequenceList();
  public final static native long LabanSequenceList_size(long jarg1, LabanSequenceList jarg1_);
  public final static native boolean LabanSequenceList_empty(long jarg1, LabanSequenceList jarg1_);
  public final static native void LabanSequenceList_clear(long jarg1, LabanSequenceList jarg1_);
  public final static native void LabanSequenceList_pushBack(long jarg1, LabanSequenceList jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native long LabanSequenceList_get(long jarg1, LabanSequenceList jarg1_, int jarg2);
  public final static native void delete_LabanSequenceList(long jarg1);
  public final static native void delete_LabanSequenceSequenceRecognizer(long jarg1);
  public final static native void LabanSequenceSequenceRecognizer_registerSequence(long jarg1, LabanSequenceSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean LabanSequenceSequenceRecognizer_deregisterSequence__SWIG_0(long jarg1, LabanSequenceSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean LabanSequenceSequenceRecognizer_deregisterSequence__SWIG_1(long jarg1, LabanSequenceSequenceRecognizer jarg1_, long jarg2);
  public final static native void LabanSequenceSequenceRecognizer_clearRegisteredSequences(long jarg1, LabanSequenceSequenceRecognizer jarg1_);
  public final static native int LabanSequenceSequenceRecognizer_getSequenceLength(long jarg1, LabanSequenceSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native long LabanSequenceSequenceRecognizer_recognizeSequence(long jarg1, LabanSequenceSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_, long jarg3, BoneVector jarg3_);
  public final static native long new_LabanSequenceRecognizer__SWIG_0(double jarg1, boolean jarg2);
  public final static native long new_LabanSequenceRecognizer__SWIG_1(double jarg1);
  public final static native long new_LabanSequenceRecognizer__SWIG_2();
  public final static native long new_LabanSequenceRecognizer__SWIG_3(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3, int jarg4, double jarg5, boolean jarg6);
  public final static native long new_LabanSequenceRecognizer__SWIG_4(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3, int jarg4, double jarg5);
  public final static native long new_LabanSequenceRecognizer__SWIG_5(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long new_LabanSequenceRecognizer__SWIG_6(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3);
  public final static native long new_LabanSequenceRecognizer__SWIG_7(long jarg1, ColumnDefinitionVector jarg1_, long jarg2);
  public final static native long new_LabanSequenceRecognizer__SWIG_8(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native void delete_LabanSequenceRecognizer(long jarg1);
  public final static native void LabanSequenceRecognizer_setRecognitionTolerance(long jarg1, LabanSequenceRecognizer jarg1_, double jarg2);
  public final static native long LabanSequenceRecognizer_getDecisionForest(long jarg1, LabanSequenceRecognizer jarg1_);
  public final static native void LabanSequenceRecognizer_registerSequence(long jarg1, LabanSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean LabanSequenceRecognizer_deregisterSequence__SWIG_0(long jarg1, LabanSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native boolean LabanSequenceRecognizer_deregisterSequence__SWIG_1(long jarg1, LabanSequenceRecognizer jarg1_, long jarg2);
  public final static native void LabanSequenceRecognizer_clearRegisteredSequences(long jarg1, LabanSequenceRecognizer jarg1_);
  public final static native long LabanSequenceRecognizer_getRegisteredSequences(long jarg1, LabanSequenceRecognizer jarg1_);
  public final static native int LabanSequenceRecognizer_getSequenceLength(long jarg1, LabanSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native long LabanSequenceRecognizer_recognizeSequence(long jarg1, LabanSequenceRecognizer jarg1_, long jarg2, LabanSequence jarg2_, long jarg3, BoneVector jarg3_);
  public final static native String LabanSequenceRecognizer_str(long jarg1, LabanSequenceRecognizer jarg1_);
  public final static native void delete_LabanSequenceSequenceGenerator(long jarg1);
  public final static native long LabanSequenceSequenceGenerator_generateSequence(long jarg1, LabanSequenceSequenceGenerator jarg1_, double jarg2, long jarg3, EnrichedPoseList jarg3_, long jarg4, BoneVector jarg4_);
  public final static native long new_LabanSequenceGenerator__SWIG_0(boolean jarg1);
  public final static native long new_LabanSequenceGenerator__SWIG_1();
  public final static native long new_LabanSequenceGenerator__SWIG_2(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3, int jarg4, boolean jarg5);
  public final static native long new_LabanSequenceGenerator__SWIG_3(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long new_LabanSequenceGenerator__SWIG_4(long jarg1, ColumnDefinitionVector jarg1_, long jarg2, long jarg3);
  public final static native long new_LabanSequenceGenerator__SWIG_5(long jarg1, ColumnDefinitionVector jarg1_, long jarg2);
  public final static native long new_LabanSequenceGenerator__SWIG_6(long jarg1, ColumnDefinitionVector jarg1_);
  public final static native void delete_LabanSequenceGenerator(long jarg1);
  public final static native long LabanSequenceGenerator_generateSequence(long jarg1, LabanSequenceGenerator jarg1_, double jarg2, long jarg3, EnrichedPoseList jarg3_, long jarg4, BoneVector jarg4_);
  public final static native void delete_LabanSequenceSequenceListener(long jarg1);
  public final static native void LabanSequenceSequenceListener_onSequence(long jarg1, LabanSequenceSequenceListener jarg1_, int jarg2, long jarg3, LabanSequence jarg3_);
  public final static native void delete_LabanSequenceRecognition_listener(long jarg1);
  public final static native void LabanSequenceRecognition_listener_onRecognition__SWIG_0(long jarg1, LabanSequenceRecognition_listener jarg1_, int jarg2, long jarg3, LabanSequenceVector jarg3_);
  public final static native void LabanSequenceRecognition_listener_onRecognition__SWIG_1(long jarg1, LabanSequenceRecognition_listener jarg1_, int jarg2, long jarg3, StringVector jarg3_);
  public final static native void delete_FlSkeletonLabanSequenceMovementDetector(long jarg1);
  public final static native long FlSkeletonLabanSequenceMovementDetector_detectMovement(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, int jarg2, double jarg3, long jarg4, FlSkeleton jarg4_, long jarg5, BoneVector jarg5_);
  public final static native void FlSkeletonLabanSequenceMovementDetector_setBuffer(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, int jarg2);
  public final static native void FlSkeletonLabanSequenceMovementDetector_clearBuffer(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_);
  public final static native void FlSkeletonLabanSequenceMovementDetector_addListener(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, IPoseListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementDetector_removeListener(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, IPoseListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementDetector_clearListeners(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_);
  public final static native void FlSkeletonLabanSequenceMovementDetector_notifyListeners(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, int jarg2, long jarg3, GeneralPose jarg3_);
  public final static native long FlSkeletonLabanSequenceMovementDetector_getCurrentPose(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_0(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, long jarg3, BoneVector jarg3_, int jarg4, double jarg5, boolean jarg6);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_1(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, long jarg3, BoneVector jarg3_, int jarg4, double jarg5);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_2(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, long jarg3, BoneVector jarg3_, int jarg4);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_3(long jarg1, FlSkeletonLabanSequenceMovementDetector jarg1_, long jarg2, long jarg3, BoneVector jarg3_);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_4(long jarg1, long jarg2, long jarg3, long jarg4, BoneVector jarg4_, int jarg5, double jarg6, boolean jarg7);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_5(long jarg1, long jarg2, long jarg3, long jarg4, BoneVector jarg4_, int jarg5, double jarg6);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_6(long jarg1, long jarg2, long jarg3, long jarg4, BoneVector jarg4_, int jarg5);
  public final static native long new_FlSkeletonLabanSequenceMovementController__SWIG_7(long jarg1, long jarg2, long jarg3, long jarg4, BoneVector jarg4_);
  public final static native void delete_FlSkeletonLabanSequenceMovementController(long jarg1);
  public final static native void FlSkeletonLabanSequenceMovementController_nextFrame(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, int jarg2, long jarg3, FlSkeleton jarg3_);
  public final static native void FlSkeletonLabanSequenceMovementController_registerSequence(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_deregisterSequence(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequence jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_clearRegisteredSequences(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native void FlSkeletonLabanSequenceMovementController_setNoBufferSizeUpdate(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, boolean jarg2);
  public final static native void FlSkeletonLabanSequenceMovementController_clearBuffer(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native long FlSkeletonLabanSequenceMovementController_getCurrentSequence(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native long FlSkeletonLabanSequenceMovementController_getCurrentPose(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native long FlSkeletonLabanSequenceMovementController_getCurrentRecognition(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native void FlSkeletonLabanSequenceMovementController_addListener__SWIG_0(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, IPoseListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_removeListener__SWIG_0(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, IPoseListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_addListener__SWIG_1(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequenceSequenceListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_removeListener__SWIG_1(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequenceSequenceListener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_addListener__SWIG_2(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequenceRecognition_listener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_removeListener__SWIG_2(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, long jarg2, LabanSequenceRecognition_listener jarg2_);
  public final static native void FlSkeletonLabanSequenceMovementController_clearListeners(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native void FlSkeletonLabanSequenceMovementController_notifySequenceListeners(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, int jarg2, long jarg3, LabanSequence jarg3_);
  public final static native void FlSkeletonLabanSequenceMovementController_notifyRecognitionListeners(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_, int jarg2, long jarg3, LabanSequenceVector jarg3_);
  public final static native long FlSkeletonLabanSequenceMovementController_getMovementDetector(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native long FlSkeletonLabanSequenceMovementController_getSequenceRecognizer(long jarg1, FlSkeletonLabanSequenceMovementController jarg1_);
  public final static native long new_FlMovementController__SWIG_0(long jarg1, double jarg2, boolean jarg3);
  public final static native long new_FlMovementController__SWIG_1(long jarg1, double jarg2);
  public final static native long new_FlMovementController__SWIG_2(long jarg1);
  public final static native long new_FlMovementController__SWIG_3();
  public final static native long new_FlMovementController__SWIG_4(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, double jarg7, boolean jarg8);
  public final static native long new_FlMovementController__SWIG_5(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, double jarg7);
  public final static native long new_FlMovementController__SWIG_6(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native long new_FlMovementController__SWIG_7(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native long new_FlMovementController__SWIG_8(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, long jarg4);
  public final static native long new_FlMovementController__SWIG_9(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3);
  public final static native long new_FlMovementController__SWIG_10(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_);
  public final static native long new_FlMovementController__SWIG_11(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4, long jarg5, long jarg6, int jarg7, double jarg8, boolean jarg9);
  public final static native long new_FlMovementController__SWIG_12(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4, long jarg5, long jarg6, int jarg7, double jarg8);
  public final static native long new_FlMovementController__SWIG_13(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long new_FlMovementController__SWIG_14(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native long new_FlMovementController__SWIG_15(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4, long jarg5);
  public final static native long new_FlMovementController__SWIG_16(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_, long jarg4);
  public final static native long new_FlMovementController__SWIG_17(long jarg1, BoneVector jarg1_, long jarg2, ColumnDefinitionVector jarg2_, long jarg3, LabanSequenceGenerator jarg3_);
  public final static native void delete_FlMovementController(long jarg1);
  public final static native void FlMovementController_nextFrame(long jarg1, FlMovementController jarg1_, int jarg2, long jarg3, GeneralSkeleton jarg3_);
  public final static native void FlMovementController_setRecognitionTolerance(long jarg1, FlMovementController jarg1_, double jarg2);
  public final static native long FlMovementController_getLabanSequenceRecognizer(long jarg1, FlMovementController jarg1_);
  public final static native long FlMovementController_getLabanSequenceGenerator(long jarg1, FlMovementController jarg1_);
  public final static native long FlMovementController_getFlPoseDetector(long jarg1, FlMovementController jarg1_);
  public final static native long new_BvhSpec(String jarg1, String jarg2, String jarg3, String jarg4, long jarg5, StringIntMap jarg5_, long jarg6, StringBoolMap jarg6_);
  public final static native void delete_BvhSpec(long jarg1);
  public final static native long BvhSpec_getIdMap(long jarg1, BvhSpec jarg1_);
  public final static native long BvhSpec_getTorsoMap(long jarg1, BvhSpec jarg1_);
  public final static native String BvhSpec_getLeftAnchor(long jarg1, BvhSpec jarg1_);
  public final static native String BvhSpec_getRightAnchor(long jarg1, BvhSpec jarg1_);
  public final static native String BvhSpec_getTopAnchor(long jarg1, BvhSpec jarg1_);
  public final static native String BvhSpec_getBottomAnchor(long jarg1, BvhSpec jarg1_);
  public final static native long BvhSpec_defaultSpec();
  public final static native long new_StringIntMap__SWIG_0();
  public final static native long new_StringIntMap__SWIG_1(long jarg1, StringIntMap jarg1_);
  public final static native long StringIntMap_size(long jarg1, StringIntMap jarg1_);
  public final static native boolean StringIntMap_empty(long jarg1, StringIntMap jarg1_);
  public final static native void StringIntMap_clear(long jarg1, StringIntMap jarg1_);
  public final static native int StringIntMap_get(long jarg1, StringIntMap jarg1_, String jarg2);
  public final static native void StringIntMap_set(long jarg1, StringIntMap jarg1_, String jarg2, int jarg3);
  public final static native void StringIntMap_del(long jarg1, StringIntMap jarg1_, String jarg2);
  public final static native boolean StringIntMap_hasKey(long jarg1, StringIntMap jarg1_, String jarg2);
  public final static native void delete_StringIntMap(long jarg1);
  public final static native long new_StringBoolMap__SWIG_0();
  public final static native long new_StringBoolMap__SWIG_1(long jarg1, StringBoolMap jarg1_);
  public final static native long StringBoolMap_size(long jarg1, StringBoolMap jarg1_);
  public final static native boolean StringBoolMap_empty(long jarg1, StringBoolMap jarg1_);
  public final static native void StringBoolMap_clear(long jarg1, StringBoolMap jarg1_);
  public final static native boolean StringBoolMap_get(long jarg1, StringBoolMap jarg1_, String jarg2);
  public final static native void StringBoolMap_set(long jarg1, StringBoolMap jarg1_, String jarg2, boolean jarg3);
  public final static native void StringBoolMap_del(long jarg1, StringBoolMap jarg1_, String jarg2);
  public final static native boolean StringBoolMap_hasKey(long jarg1, StringBoolMap jarg1_, String jarg2);
  public final static native void delete_StringBoolMap(long jarg1);
  public final static native long new_BvhController();
  public final static native void delete_BvhController(long jarg1);
  public final static native String BvhController_bvhStr__SWIG_0(long jarg1, BvhController jarg1_, long jarg2, GeneralSkeletonVector jarg2_);
  public final static native String BvhController_bvhStr__SWIG_1(long jarg1, BvhController jarg1_, long jarg2, GeneralSkeletonVector jarg2_, double jarg3);
  public final static native String BvhController_bvhStr__SWIG_2(long jarg1, BvhController jarg1_, long jarg2, GeneralSkeleton jarg2_);
  public final static native void BvhController_printBvhFile__SWIG_0(long jarg1, BvhController jarg1_, long jarg2, GeneralSkeletonVector jarg2_, String jarg3);
  public final static native void BvhController_printBvhFile__SWIG_1(long jarg1, BvhController jarg1_, long jarg2, GeneralSkeleton jarg2_, String jarg3);
  public final static native long BvhController_readBvhStr(long jarg1, BvhController jarg1_, String jarg2, long jarg3, BvhSpec jarg3_);
  public final static native long BvhController_readBvhFile(long jarg1, BvhController jarg1_, String jarg2, long jarg3, BvhSpec jarg3_);
  public final static native long new_GeneralSkeletonVector__SWIG_0();
  public final static native long new_GeneralSkeletonVector__SWIG_1(long jarg1);
  public final static native long GeneralSkeletonVector_size(long jarg1, GeneralSkeletonVector jarg1_);
  public final static native long GeneralSkeletonVector_capacity(long jarg1, GeneralSkeletonVector jarg1_);
  public final static native void GeneralSkeletonVector_reserve(long jarg1, GeneralSkeletonVector jarg1_, long jarg2);
  public final static native boolean GeneralSkeletonVector_empty(long jarg1, GeneralSkeletonVector jarg1_);
  public final static native void GeneralSkeletonVector_clear(long jarg1, GeneralSkeletonVector jarg1_);
  public final static native void GeneralSkeletonVector_pushBack(long jarg1, GeneralSkeletonVector jarg1_, long jarg2, GeneralSkeleton jarg2_);
  public final static native long GeneralSkeletonVector_get(long jarg1, GeneralSkeletonVector jarg1_, int jarg2);
  public final static native void GeneralSkeletonVector_set(long jarg1, GeneralSkeletonVector jarg1_, int jarg2, long jarg3, GeneralSkeleton jarg3_);
  public final static native void delete_GeneralSkeletonVector(long jarg1);
  public final static native long new_GeneralSkeletonVectorDoublePair__SWIG_0();
  public final static native long new_GeneralSkeletonVectorDoublePair__SWIG_1(long jarg1, GeneralSkeletonVector jarg1_, double jarg2);
  public final static native long new_GeneralSkeletonVectorDoublePair__SWIG_2(long jarg1, GeneralSkeletonVectorDoublePair jarg1_);
  public final static native void GeneralSkeletonVectorDoublePair_first_set(long jarg1, GeneralSkeletonVectorDoublePair jarg1_, long jarg2, GeneralSkeletonVector jarg2_);
  public final static native long GeneralSkeletonVectorDoublePair_first_get(long jarg1, GeneralSkeletonVectorDoublePair jarg1_);
  public final static native void GeneralSkeletonVectorDoublePair_second_set(long jarg1, GeneralSkeletonVectorDoublePair jarg1_, double jarg2);
  public final static native double GeneralSkeletonVectorDoublePair_second_get(long jarg1, GeneralSkeletonVectorDoublePair jarg1_);
  public final static native void delete_GeneralSkeletonVectorDoublePair(long jarg1);
  public final static native long new_LabanSequenceReader();
  public final static native void delete_LabanSequenceReader(long jarg1);
  public final static native long LabanSequenceReader_readSequenceFile(long jarg1, LabanSequenceReader jarg1_, String jarg2);
  public final static native long LabanSequenceReader_readSequenceStr(long jarg1, LabanSequenceReader jarg1_, String jarg2);
  public final static native void delete_ISymbol(long jarg1);
  public final static native boolean ISymbol_equals(long jarg1, ISymbol jarg1_, long jarg2, ISymbol jarg2_);
  public final static native String ISymbol_xml__SWIG_0(long jarg1, ISymbol jarg1_, long jarg2, String jarg3);
  public final static native String ISymbol_xml__SWIG_1(long jarg1, ISymbol jarg1_, long jarg2);
  public final static native String ISymbol_xml__SWIG_2(long jarg1, ISymbol jarg1_);
  public final static native String ISymbol_svg__SWIG_0(long jarg1, ISymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String ISymbol_svg__SWIG_1(long jarg1, ISymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String ISymbol_str(long jarg1, ISymbol jarg1_);
  public final static native long new_Movement__SWIG_0(int jarg1, long jarg2, double jarg3, double jarg4, long jarg5, ISymbol jarg5_, boolean jarg6, long jarg7, IPreSign jarg7_);
  public final static native long new_Movement__SWIG_1(int jarg1, long jarg2, double jarg3, double jarg4, long jarg5, ISymbol jarg5_, boolean jarg6);
  public final static native long new_Movement__SWIG_2(int jarg1, long jarg2, double jarg3, double jarg4, long jarg5, ISymbol jarg5_);
  public final static native void delete_Movement(long jarg1);
  public final static native int Movement_getColumn(long jarg1, Movement jarg1_);
  public final static native long Movement_getMeasure(long jarg1, Movement jarg1_);
  public final static native double Movement_getBeat(long jarg1, Movement jarg1_);
  public final static native double Movement_getDuration(long jarg1, Movement jarg1_);
  public final static native long Movement_getPreSign(long jarg1, Movement jarg1_);
  public final static native boolean Movement_getHold(long jarg1, Movement jarg1_);
  public final static native long Movement_getSymbol(long jarg1, Movement jarg1_);
  public final static native boolean Movement_equals(long jarg1, Movement jarg1_, long jarg2, IMovement jarg2_);
  public final static native boolean Movement_symbolEquals(long jarg1, Movement jarg1_, long jarg2, IMovement jarg2_);
  public final static native String Movement_xml__SWIG_0(long jarg1, Movement jarg1_, long jarg2, String jarg3);
  public final static native String Movement_xml__SWIG_1(long jarg1, Movement jarg1_, long jarg2);
  public final static native String Movement_xml__SWIG_2(long jarg1, Movement jarg1_);
  public final static native String Movement_svg(long jarg1, Movement jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long Movement_recreate(long jarg1, Movement jarg1_, long jarg2, IntIntMap jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native String Movement_str(long jarg1, Movement jarg1_);
  public final static native String EPathTypeC_str(int jarg1);
  public final static native long EPathTypeC_vec();
  public final static native int EPathTypeC_parse(String jarg1);
  public final static native long new_EPathTypeC();
  public final static native void delete_EPathTypeC(long jarg1);
  public final static native long new_EPathTypeVector__SWIG_0();
  public final static native long new_EPathTypeVector__SWIG_1(long jarg1);
  public final static native long EPathTypeVector_size(long jarg1, EPathTypeVector jarg1_);
  public final static native long EPathTypeVector_capacity(long jarg1, EPathTypeVector jarg1_);
  public final static native void EPathTypeVector_reserve(long jarg1, EPathTypeVector jarg1_, long jarg2);
  public final static native boolean EPathTypeVector_empty(long jarg1, EPathTypeVector jarg1_);
  public final static native void EPathTypeVector_clear(long jarg1, EPathTypeVector jarg1_);
  public final static native void EPathTypeVector_pushBack(long jarg1, EPathTypeVector jarg1_, int jarg2);
  public final static native int EPathTypeVector_get(long jarg1, EPathTypeVector jarg1_, int jarg2);
  public final static native void EPathTypeVector_set(long jarg1, EPathTypeVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EPathTypeVector(long jarg1);
  public final static native long new_Path(int jarg1, long jarg2, double jarg3, double jarg4);
  public final static native void delete_Path(long jarg1);
  public final static native int Path_getType(long jarg1, Path jarg1_);
  public final static native int Path_getColumn(long jarg1, Path jarg1_);
  public final static native long Path_getMeasure(long jarg1, Path jarg1_);
  public final static native double Path_getBeat(long jarg1, Path jarg1_);
  public final static native double Path_getDuration(long jarg1, Path jarg1_);
  public final static native boolean Path_equals(long jarg1, Path jarg1_, long jarg2, IMovement jarg2_);
  public final static native boolean Path_symbolEquals(long jarg1, Path jarg1_, long jarg2, IMovement jarg2_);
  public final static native String Path_xml__SWIG_0(long jarg1, Path jarg1_, long jarg2, String jarg3);
  public final static native String Path_xml__SWIG_1(long jarg1, Path jarg1_, long jarg2);
  public final static native String Path_xml__SWIG_2(long jarg1, Path jarg1_);
  public final static native String Path_svg(long jarg1, Path jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long Path_recreate(long jarg1, Path jarg1_, long jarg2, IntIntMap jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native String Path_str(long jarg1, Path jarg1_);
  public final static native String ERelationshipTypeC_str(int jarg1);
  public final static native long ERelationshipTypeC_vec();
  public final static native int ERelationshipTypeC_parse(String jarg1);
  public final static native long new_ERelationshipTypeC();
  public final static native void delete_ERelationshipTypeC(long jarg1);
  public final static native long new_ERelationshipTypeVector__SWIG_0();
  public final static native long new_ERelationshipTypeVector__SWIG_1(long jarg1);
  public final static native long ERelationshipTypeVector_size(long jarg1, ERelationshipTypeVector jarg1_);
  public final static native long ERelationshipTypeVector_capacity(long jarg1, ERelationshipTypeVector jarg1_);
  public final static native void ERelationshipTypeVector_reserve(long jarg1, ERelationshipTypeVector jarg1_, long jarg2);
  public final static native boolean ERelationshipTypeVector_empty(long jarg1, ERelationshipTypeVector jarg1_);
  public final static native void ERelationshipTypeVector_clear(long jarg1, ERelationshipTypeVector jarg1_);
  public final static native void ERelationshipTypeVector_pushBack(long jarg1, ERelationshipTypeVector jarg1_, int jarg2);
  public final static native int ERelationshipTypeVector_get(long jarg1, ERelationshipTypeVector jarg1_, int jarg2);
  public final static native void ERelationshipTypeVector_set(long jarg1, ERelationshipTypeVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ERelationshipTypeVector(long jarg1);
  public final static native void delete_IDynamicsSign(long jarg1);
  public final static native boolean IDynamicsSign_equals(long jarg1, IDynamicsSign jarg1_, long jarg2, IDynamicsSign jarg2_);
  public final static native String IDynamicsSign_xml__SWIG_0(long jarg1, IDynamicsSign jarg1_, long jarg2, String jarg3);
  public final static native String IDynamicsSign_xml__SWIG_1(long jarg1, IDynamicsSign jarg1_, long jarg2);
  public final static native String IDynamicsSign_xml__SWIG_2(long jarg1, IDynamicsSign jarg1_);
  public final static native long new_RelationshipEndpoint__SWIG_0(int jarg1, boolean jarg2, long jarg3, IPreSign jarg3_, long jarg4, IDynamicsSign jarg4_);
  public final static native long new_RelationshipEndpoint__SWIG_1(int jarg1, boolean jarg2, long jarg3, IPreSign jarg3_);
  public final static native long new_RelationshipEndpoint__SWIG_2(int jarg1, boolean jarg2);
  public final static native void delete_RelationshipEndpoint(long jarg1);
  public final static native int RelationshipEndpoint_getColumn(long jarg1, RelationshipEndpoint jarg1_);
  public final static native long RelationshipEndpoint_getPreSign(long jarg1, RelationshipEndpoint jarg1_);
  public final static native long RelationshipEndpoint_getDynamics(long jarg1, RelationshipEndpoint jarg1_);
  public final static native boolean RelationshipEndpoint_getActive(long jarg1, RelationshipEndpoint jarg1_);
  public final static native String RelationshipEndpoint_xml__SWIG_0(long jarg1, RelationshipEndpoint jarg1_, long jarg2, String jarg3);
  public final static native String RelationshipEndpoint_xml__SWIG_1(long jarg1, RelationshipEndpoint jarg1_, long jarg2);
  public final static native String RelationshipEndpoint_xml__SWIG_2(long jarg1, RelationshipEndpoint jarg1_);
  public final static native long RelationshipEndpoint_recreate(long jarg1, RelationshipEndpoint jarg1_, long jarg2, IntIntMap jarg2_);
  public final static native boolean RelationshipEndpoint_equals(long jarg1, RelationshipEndpoint jarg1_, long jarg2, RelationshipEndpoint jarg2_);
  public final static native long new_RelationshipBow(int jarg1, boolean jarg2, boolean jarg3, boolean jarg4, long jarg5, double jarg6, long jarg7, RelationshipEndpoint jarg7_, long jarg8, RelationshipEndpoint jarg8_);
  public final static native void delete_RelationshipBow(long jarg1);
  public final static native int RelationshipBow_getType(long jarg1, RelationshipBow jarg1_);
  public final static native boolean RelationshipBow_getGrasping(long jarg1, RelationshipBow jarg1_);
  public final static native boolean RelationshipBow_getPassing(long jarg1, RelationshipBow jarg1_);
  public final static native boolean RelationshipBow_getHold(long jarg1, RelationshipBow jarg1_);
  public final static native long RelationshipBow_getLeftEndpoint(long jarg1, RelationshipBow jarg1_);
  public final static native long RelationshipBow_getRightEndpoint(long jarg1, RelationshipBow jarg1_);
  public final static native int RelationshipBow_getColumn(long jarg1, RelationshipBow jarg1_);
  public final static native long RelationshipBow_getMeasure(long jarg1, RelationshipBow jarg1_);
  public final static native double RelationshipBow_getBeat(long jarg1, RelationshipBow jarg1_);
  public final static native double RelationshipBow_getDuration(long jarg1, RelationshipBow jarg1_);
  public final static native boolean RelationshipBow_equals(long jarg1, RelationshipBow jarg1_, long jarg2, IMovement jarg2_);
  public final static native boolean RelationshipBow_symbolEquals(long jarg1, RelationshipBow jarg1_, long jarg2, IMovement jarg2_);
  public final static native String RelationshipBow_xml__SWIG_0(long jarg1, RelationshipBow jarg1_, long jarg2, String jarg3);
  public final static native String RelationshipBow_xml__SWIG_1(long jarg1, RelationshipBow jarg1_, long jarg2);
  public final static native String RelationshipBow_xml__SWIG_2(long jarg1, RelationshipBow jarg1_);
  public final static native String RelationshipBow_svg(long jarg1, RelationshipBow jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long RelationshipBow_recreate(long jarg1, RelationshipBow jarg1_, long jarg2, IntIntMap jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native String RelationshipBow_str(long jarg1, RelationshipBow jarg1_);
  public final static native void delete_IDegreeSign(long jarg1);
  public final static native boolean IDegreeSign_equals(long jarg1, IDegreeSign jarg1_, long jarg2, IDegreeSign jarg2_);
  public final static native String IDegreeSign_xml__SWIG_0(long jarg1, IDegreeSign jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native String IDegreeSign_xml__SWIG_1(long jarg1, IDegreeSign jarg1_, long jarg2, String jarg3);
  public final static native String IDegreeSign_xml__SWIG_2(long jarg1, IDegreeSign jarg1_, long jarg2);
  public final static native String IDegreeSign_xml__SWIG_3(long jarg1, IDegreeSign jarg1_);
  public final static native String IDegreeSign_svg__SWIG_0(long jarg1, IDegreeSign jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String IDegreeSign_svg__SWIG_1(long jarg1, IDegreeSign jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String ELevelC_str(int jarg1);
  public final static native int ELevelC_lvl(int jarg1);
  public final static native long ELevelC_vec();
  public final static native int ELevelC_parse(String jarg1);
  public final static native long new_ELevelC();
  public final static native void delete_ELevelC(long jarg1);
  public final static native long new_ELevelVector__SWIG_0();
  public final static native long new_ELevelVector__SWIG_1(long jarg1);
  public final static native long ELevelVector_size(long jarg1, ELevelVector jarg1_);
  public final static native long ELevelVector_capacity(long jarg1, ELevelVector jarg1_);
  public final static native void ELevelVector_reserve(long jarg1, ELevelVector jarg1_, long jarg2);
  public final static native boolean ELevelVector_empty(long jarg1, ELevelVector jarg1_);
  public final static native void ELevelVector_clear(long jarg1, ELevelVector jarg1_);
  public final static native void ELevelVector_pushBack(long jarg1, ELevelVector jarg1_, int jarg2);
  public final static native int ELevelVector_get(long jarg1, ELevelVector jarg1_, int jarg2);
  public final static native void ELevelVector_set(long jarg1, ELevelVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ELevelVector(long jarg1);
  public final static native long new_Pin(int jarg1, int jarg2);
  public final static native void delete_Pin(long jarg1);
  public final static native int Pin_getLevel(long jarg1, Pin jarg1_);
  public final static native int Pin_getHorizontal(long jarg1, Pin jarg1_);
  public final static native boolean Pin_equals(long jarg1, Pin jarg1_, long jarg2, IDegreeSign jarg2_);
  public final static native String Pin_xml__SWIG_0(long jarg1, Pin jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native String Pin_xml__SWIG_1(long jarg1, Pin jarg1_, long jarg2, String jarg3);
  public final static native String Pin_xml__SWIG_2(long jarg1, Pin jarg1_, long jarg2);
  public final static native String Pin_xml__SWIG_3(long jarg1, Pin jarg1_);
  public final static native String Pin_svg__SWIG_0(long jarg1, Pin jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String Pin_svg__SWIG_1(long jarg1, Pin jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_RoomDirection(long jarg1, double jarg2, long jarg3, Pin jarg3_);
  public final static native void delete_RoomDirection(long jarg1);
  public final static native int RoomDirection_getColumn(long jarg1, RoomDirection jarg1_);
  public final static native long RoomDirection_getMeasure(long jarg1, RoomDirection jarg1_);
  public final static native double RoomDirection_getBeat(long jarg1, RoomDirection jarg1_);
  public final static native double RoomDirection_getDuration(long jarg1, RoomDirection jarg1_);
  public final static native long RoomDirection_getDirection(long jarg1, RoomDirection jarg1_);
  public final static native boolean RoomDirection_equals(long jarg1, RoomDirection jarg1_, long jarg2, IMovement jarg2_);
  public final static native boolean RoomDirection_symbolEquals(long jarg1, RoomDirection jarg1_, long jarg2, IMovement jarg2_);
  public final static native String RoomDirection_xml__SWIG_0(long jarg1, RoomDirection jarg1_, long jarg2, String jarg3);
  public final static native String RoomDirection_xml__SWIG_1(long jarg1, RoomDirection jarg1_, long jarg2);
  public final static native String RoomDirection_xml__SWIG_2(long jarg1, RoomDirection jarg1_);
  public final static native String RoomDirection_svg(long jarg1, RoomDirection jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long RoomDirection_recreate(long jarg1, RoomDirection jarg1_, long jarg2, IntIntMap jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native String RoomDirection_str(long jarg1, RoomDirection jarg1_);
  public final static native long new_AccentSign(long jarg1);
  public final static native void delete_AccentSign(long jarg1);
  public final static native long AccentSign_getAccent(long jarg1, AccentSign jarg1_);
  public final static native boolean AccentSign_equals(long jarg1, AccentSign jarg1_, long jarg2, IDynamicsSign jarg2_);
  public final static native String AccentSign_xml__SWIG_0(long jarg1, AccentSign jarg1_, long jarg2, String jarg3);
  public final static native String AccentSign_xml__SWIG_1(long jarg1, AccentSign jarg1_, long jarg2);
  public final static native String AccentSign_xml__SWIG_2(long jarg1, AccentSign jarg1_);
  public final static native String EDynamicC_str(int jarg1);
  public final static native long EDynamicC_vec();
  public final static native int EDynamicC_parse(String jarg1);
  public final static native long new_EDynamicC();
  public final static native void delete_EDynamicC(long jarg1);
  public final static native long new_EDynamicVector__SWIG_0();
  public final static native long new_EDynamicVector__SWIG_1(long jarg1);
  public final static native long EDynamicVector_size(long jarg1, EDynamicVector jarg1_);
  public final static native long EDynamicVector_capacity(long jarg1, EDynamicVector jarg1_);
  public final static native void EDynamicVector_reserve(long jarg1, EDynamicVector jarg1_, long jarg2);
  public final static native boolean EDynamicVector_empty(long jarg1, EDynamicVector jarg1_);
  public final static native void EDynamicVector_clear(long jarg1, EDynamicVector jarg1_);
  public final static native void EDynamicVector_pushBack(long jarg1, EDynamicVector jarg1_, int jarg2);
  public final static native int EDynamicVector_get(long jarg1, EDynamicVector jarg1_, int jarg2);
  public final static native void EDynamicVector_set(long jarg1, EDynamicVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EDynamicVector(long jarg1);
  public final static native long new_DynamicSign(int jarg1);
  public final static native void delete_DynamicSign(long jarg1);
  public final static native int DynamicSign_getDynamic(long jarg1, DynamicSign jarg1_);
  public final static native boolean DynamicSign_equals(long jarg1, DynamicSign jarg1_, long jarg2, IDynamicsSign jarg2_);
  public final static native String DynamicSign_xml__SWIG_0(long jarg1, DynamicSign jarg1_, long jarg2, String jarg3);
  public final static native String DynamicSign_xml__SWIG_1(long jarg1, DynamicSign jarg1_, long jarg2);
  public final static native String DynamicSign_xml__SWIG_2(long jarg1, DynamicSign jarg1_);
  public final static native String ECancelC_str(int jarg1);
  public final static native long ECancelC_vec();
  public final static native int ECancelC_parse(String jarg1);
  public final static native long new_ECancelC();
  public final static native void delete_ECancelC(long jarg1);
  public final static native long new_ECancelVector__SWIG_0();
  public final static native long new_ECancelVector__SWIG_1(long jarg1);
  public final static native long ECancelVector_size(long jarg1, ECancelVector jarg1_);
  public final static native long ECancelVector_capacity(long jarg1, ECancelVector jarg1_);
  public final static native void ECancelVector_reserve(long jarg1, ECancelVector jarg1_, long jarg2);
  public final static native boolean ECancelVector_empty(long jarg1, ECancelVector jarg1_);
  public final static native void ECancelVector_clear(long jarg1, ECancelVector jarg1_);
  public final static native void ECancelVector_pushBack(long jarg1, ECancelVector jarg1_, int jarg2);
  public final static native int ECancelVector_get(long jarg1, ECancelVector jarg1_, int jarg2);
  public final static native void ECancelVector_set(long jarg1, ECancelVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ECancelVector(long jarg1);
  public final static native long new_CancellationSymbol(int jarg1);
  public final static native void delete_CancellationSymbol(long jarg1);
  public final static native int CancellationSymbol_getCancel(long jarg1, CancellationSymbol jarg1_);
  public final static native boolean CancellationSymbol_equals(long jarg1, CancellationSymbol jarg1_, long jarg2, ISymbol jarg2_);
  public final static native String CancellationSymbol_xml__SWIG_0(long jarg1, CancellationSymbol jarg1_, long jarg2, String jarg3);
  public final static native String CancellationSymbol_xml__SWIG_1(long jarg1, CancellationSymbol jarg1_, long jarg2);
  public final static native String CancellationSymbol_xml__SWIG_2(long jarg1, CancellationSymbol jarg1_);
  public final static native String CancellationSymbol_svg__SWIG_0(long jarg1, CancellationSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String CancellationSymbol_svg__SWIG_1(long jarg1, CancellationSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String CancellationSymbol_str(long jarg1, CancellationSymbol jarg1_);
  public final static native String ESpaceC_str(int jarg1);
  public final static native long ESpaceC_vec();
  public final static native int ESpaceC_parse(String jarg1);
  public final static native long new_ESpaceC();
  public final static native void delete_ESpaceC(long jarg1);
  public final static native long new_ESpaceVector__SWIG_0();
  public final static native long new_ESpaceVector__SWIG_1(long jarg1);
  public final static native long ESpaceVector_size(long jarg1, ESpaceVector jarg1_);
  public final static native long ESpaceVector_capacity(long jarg1, ESpaceVector jarg1_);
  public final static native void ESpaceVector_reserve(long jarg1, ESpaceVector jarg1_, long jarg2);
  public final static native boolean ESpaceVector_empty(long jarg1, ESpaceVector jarg1_);
  public final static native void ESpaceVector_clear(long jarg1, ESpaceVector jarg1_);
  public final static native void ESpaceVector_pushBack(long jarg1, ESpaceVector jarg1_, int jarg2);
  public final static native int ESpaceVector_get(long jarg1, ESpaceVector jarg1_, int jarg2);
  public final static native void ESpaceVector_set(long jarg1, ESpaceVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ESpaceVector(long jarg1);
  public final static native String ESpaceDirectionC_str(int jarg1);
  public final static native long ESpaceDirectionC_vec();
  public final static native int ESpaceDirectionC_parse(String jarg1);
  public final static native long new_ESpaceDirectionC();
  public final static native void delete_ESpaceDirectionC(long jarg1);
  public final static native long new_ESpaceDirectionVector__SWIG_0();
  public final static native long new_ESpaceDirectionVector__SWIG_1(long jarg1);
  public final static native long ESpaceDirectionVector_size(long jarg1, ESpaceDirectionVector jarg1_);
  public final static native long ESpaceDirectionVector_capacity(long jarg1, ESpaceDirectionVector jarg1_);
  public final static native void ESpaceDirectionVector_reserve(long jarg1, ESpaceDirectionVector jarg1_, long jarg2);
  public final static native boolean ESpaceDirectionVector_empty(long jarg1, ESpaceDirectionVector jarg1_);
  public final static native void ESpaceDirectionVector_clear(long jarg1, ESpaceDirectionVector jarg1_);
  public final static native void ESpaceDirectionVector_pushBack(long jarg1, ESpaceDirectionVector jarg1_, int jarg2);
  public final static native int ESpaceDirectionVector_get(long jarg1, ESpaceDirectionVector jarg1_, int jarg2);
  public final static native void ESpaceDirectionVector_set(long jarg1, ESpaceDirectionVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ESpaceDirectionVector(long jarg1);
  public final static native long new_SpaceMeasurement__SWIG_0(int jarg1, long jarg2, int jarg3);
  public final static native long new_SpaceMeasurement__SWIG_1(int jarg1, long jarg2);
  public final static native void delete_SpaceMeasurement(long jarg1);
  public final static native int SpaceMeasurement_getType(long jarg1, SpaceMeasurement jarg1_);
  public final static native long SpaceMeasurement_getDegree(long jarg1, SpaceMeasurement jarg1_);
  public final static native int SpaceMeasurement_getDirection(long jarg1, SpaceMeasurement jarg1_);
  public final static native boolean SpaceMeasurement_equals(long jarg1, SpaceMeasurement jarg1_, long jarg2, IDegreeSign jarg2_);
  public final static native String SpaceMeasurement_xml__SWIG_0(long jarg1, SpaceMeasurement jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native String SpaceMeasurement_xml__SWIG_1(long jarg1, SpaceMeasurement jarg1_, long jarg2, String jarg3);
  public final static native String SpaceMeasurement_xml__SWIG_2(long jarg1, SpaceMeasurement jarg1_, long jarg2);
  public final static native String SpaceMeasurement_xml__SWIG_3(long jarg1, SpaceMeasurement jarg1_);
  public final static native String SpaceMeasurement_svg__SWIG_0(long jarg1, SpaceMeasurement jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String SpaceMeasurement_svg__SWIG_1(long jarg1, SpaceMeasurement jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String SpaceMeasurement_str(long jarg1, SpaceMeasurement jarg1_);
  public final static native String EDirectionC_str(int jarg1);
  public final static native int EDirectionC_dir(int jarg1);
  public final static native long EDirectionC_vec();
  public final static native int EDirectionC_parse(String jarg1);
  public final static native long new_EDirectionC();
  public final static native void delete_EDirectionC(long jarg1);
  public final static native long new_EDirectionVector__SWIG_0();
  public final static native long new_EDirectionVector__SWIG_1(long jarg1);
  public final static native long EDirectionVector_size(long jarg1, EDirectionVector jarg1_);
  public final static native long EDirectionVector_capacity(long jarg1, EDirectionVector jarg1_);
  public final static native void EDirectionVector_reserve(long jarg1, EDirectionVector jarg1_, long jarg2);
  public final static native boolean EDirectionVector_empty(long jarg1, EDirectionVector jarg1_);
  public final static native void EDirectionVector_clear(long jarg1, EDirectionVector jarg1_);
  public final static native void EDirectionVector_pushBack(long jarg1, EDirectionVector jarg1_, int jarg2);
  public final static native int EDirectionVector_get(long jarg1, EDirectionVector jarg1_, int jarg2);
  public final static native void EDirectionVector_set(long jarg1, EDirectionVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EDirectionVector(long jarg1);
  public final static native String EContactHookC_str(int jarg1);
  public final static native long EContactHookC_vec();
  public final static native int EContactHookC_parse(String jarg1);
  public final static native long new_EContactHookC();
  public final static native void delete_EContactHookC(long jarg1);
  public final static native long new_EContactHookVector__SWIG_0();
  public final static native long new_EContactHookVector__SWIG_1(long jarg1);
  public final static native long EContactHookVector_size(long jarg1, EContactHookVector jarg1_);
  public final static native long EContactHookVector_capacity(long jarg1, EContactHookVector jarg1_);
  public final static native void EContactHookVector_reserve(long jarg1, EContactHookVector jarg1_, long jarg2);
  public final static native boolean EContactHookVector_empty(long jarg1, EContactHookVector jarg1_);
  public final static native void EContactHookVector_clear(long jarg1, EContactHookVector jarg1_);
  public final static native void EContactHookVector_pushBack(long jarg1, EContactHookVector jarg1_, int jarg2);
  public final static native int EContactHookVector_get(long jarg1, EContactHookVector jarg1_, int jarg2);
  public final static native void EContactHookVector_set(long jarg1, EContactHookVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EContactHookVector(long jarg1);
  public final static native long new_DirectionSymbol__SWIG_0(int jarg1, int jarg2, long jarg3, Pin jarg3_, long jarg4, Pin jarg4_, long jarg5, IDynamicsSign jarg5_, long jarg6, SpaceMeasurement jarg6_, int jarg7);
  public final static native long new_DirectionSymbol__SWIG_1(int jarg1, int jarg2, long jarg3, Pin jarg3_, long jarg4, Pin jarg4_, long jarg5, IDynamicsSign jarg5_, long jarg6, SpaceMeasurement jarg6_);
  public final static native long new_DirectionSymbol__SWIG_2(int jarg1, int jarg2, long jarg3, Pin jarg3_, long jarg4, Pin jarg4_, long jarg5, IDynamicsSign jarg5_);
  public final static native long new_DirectionSymbol__SWIG_3(int jarg1, int jarg2, long jarg3, Pin jarg3_, long jarg4, Pin jarg4_);
  public final static native long new_DirectionSymbol__SWIG_4(int jarg1, int jarg2, long jarg3, Pin jarg3_);
  public final static native long new_DirectionSymbol__SWIG_5(int jarg1, int jarg2);
  public final static native void delete_DirectionSymbol(long jarg1);
  public final static native int DirectionSymbol_getVertical(long jarg1, DirectionSymbol jarg1_);
  public final static native int DirectionSymbol_getHorizontal(long jarg1, DirectionSymbol jarg1_);
  public final static native long DirectionSymbol_getModificationPin(long jarg1, DirectionSymbol jarg1_);
  public final static native long DirectionSymbol_getRelationshipPin(long jarg1, DirectionSymbol jarg1_);
  public final static native long DirectionSymbol_getDynamics(long jarg1, DirectionSymbol jarg1_);
  public final static native long DirectionSymbol_getSpaceMeasurement(long jarg1, DirectionSymbol jarg1_);
  public final static native int DirectionSymbol_getContactHook(long jarg1, DirectionSymbol jarg1_);
  public final static native boolean DirectionSymbol_equals(long jarg1, DirectionSymbol jarg1_, long jarg2, ISymbol jarg2_);
  public final static native String DirectionSymbol_xml__SWIG_0(long jarg1, DirectionSymbol jarg1_, long jarg2, String jarg3);
  public final static native String DirectionSymbol_xml__SWIG_1(long jarg1, DirectionSymbol jarg1_, long jarg2);
  public final static native String DirectionSymbol_xml__SWIG_2(long jarg1, DirectionSymbol jarg1_);
  public final static native String DirectionSymbol_svg__SWIG_0(long jarg1, DirectionSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String DirectionSymbol_svg__SWIG_1(long jarg1, DirectionSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String DirectionSymbol_str(long jarg1, DirectionSymbol jarg1_);
  public final static native String ETurnDirectionC_str(int jarg1);
  public final static native long ETurnDirectionC_vec();
  public final static native int ETurnDirectionC_parse(String jarg1);
  public final static native long new_ETurnDirectionC();
  public final static native void delete_ETurnDirectionC(long jarg1);
  public final static native long new_ETurnDirectionVector__SWIG_0();
  public final static native long new_ETurnDirectionVector__SWIG_1(long jarg1);
  public final static native long ETurnDirectionVector_size(long jarg1, ETurnDirectionVector jarg1_);
  public final static native long ETurnDirectionVector_capacity(long jarg1, ETurnDirectionVector jarg1_);
  public final static native void ETurnDirectionVector_reserve(long jarg1, ETurnDirectionVector jarg1_, long jarg2);
  public final static native boolean ETurnDirectionVector_empty(long jarg1, ETurnDirectionVector jarg1_);
  public final static native void ETurnDirectionVector_clear(long jarg1, ETurnDirectionVector jarg1_);
  public final static native void ETurnDirectionVector_pushBack(long jarg1, ETurnDirectionVector jarg1_, int jarg2);
  public final static native int ETurnDirectionVector_get(long jarg1, ETurnDirectionVector jarg1_, int jarg2);
  public final static native void ETurnDirectionVector_set(long jarg1, ETurnDirectionVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ETurnDirectionVector(long jarg1);
  public final static native long new_TurnSymbol__SWIG_0(int jarg1, long jarg2, IDynamicsSign jarg2_, long jarg3, IDegreeSign jarg3_);
  public final static native long new_TurnSymbol__SWIG_1(int jarg1, long jarg2, IDynamicsSign jarg2_);
  public final static native long new_TurnSymbol__SWIG_2(int jarg1);
  public final static native void delete_TurnSymbol(long jarg1);
  public final static native int TurnSymbol_getDirection(long jarg1, TurnSymbol jarg1_);
  public final static native long TurnSymbol_getDynamics(long jarg1, TurnSymbol jarg1_);
  public final static native long TurnSymbol_getDegree(long jarg1, TurnSymbol jarg1_);
  public final static native boolean TurnSymbol_equals(long jarg1, TurnSymbol jarg1_, long jarg2, ISymbol jarg2_);
  public final static native String TurnSymbol_xml__SWIG_0(long jarg1, TurnSymbol jarg1_, long jarg2, String jarg3);
  public final static native String TurnSymbol_xml__SWIG_1(long jarg1, TurnSymbol jarg1_, long jarg2);
  public final static native String TurnSymbol_xml__SWIG_2(long jarg1, TurnSymbol jarg1_);
  public final static native String TurnSymbol_svg__SWIG_0(long jarg1, TurnSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String TurnSymbol_svg__SWIG_1(long jarg1, TurnSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String TurnSymbol_str(long jarg1, TurnSymbol jarg1_);
  public final static native long new_VibrationSymbol__SWIG_0(long jarg1, Pin jarg1_, long jarg2, Pin jarg2_, long jarg3, IDynamicsSign jarg3_);
  public final static native long new_VibrationSymbol__SWIG_1(long jarg1, Pin jarg1_, long jarg2, Pin jarg2_);
  public final static native void delete_VibrationSymbol(long jarg1);
  public final static native long VibrationSymbol_getDynamics(long jarg1, VibrationSymbol jarg1_);
  public final static native long VibrationSymbol_getDisplacement1(long jarg1, VibrationSymbol jarg1_);
  public final static native long VibrationSymbol_getDisplacement2(long jarg1, VibrationSymbol jarg1_);
  public final static native boolean VibrationSymbol_equals(long jarg1, VibrationSymbol jarg1_, long jarg2, ISymbol jarg2_);
  public final static native String VibrationSymbol_xml__SWIG_0(long jarg1, VibrationSymbol jarg1_, long jarg2, String jarg3);
  public final static native String VibrationSymbol_xml__SWIG_1(long jarg1, VibrationSymbol jarg1_, long jarg2);
  public final static native String VibrationSymbol_xml__SWIG_2(long jarg1, VibrationSymbol jarg1_);
  public final static native String VibrationSymbol_svg__SWIG_0(long jarg1, VibrationSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String VibrationSymbol_svg__SWIG_1(long jarg1, VibrationSymbol jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native String VibrationSymbol_str(long jarg1, VibrationSymbol jarg1_);
  public final static native void delete_IPart(long jarg1);
  public final static native String IPart_xml__SWIG_0(long jarg1, IPart jarg1_, long jarg2, String jarg3);
  public final static native String IPart_xml__SWIG_1(long jarg1, IPart jarg1_, long jarg2);
  public final static native String IPart_xml__SWIG_2(long jarg1, IPart jarg1_);
  public final static native String IPart_svg__SWIG_0(long jarg1, IPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String IPart_svg__SWIG_1(long jarg1, IPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean IPart_equals(long jarg1, IPart jarg1_, long jarg2, IPart jarg2_);
  public final static native void delete_IEndpoint(long jarg1);
  public final static native String IEndpoint_xml__SWIG_0(long jarg1, IEndpoint jarg1_, long jarg2, String jarg3);
  public final static native String IEndpoint_xml__SWIG_1(long jarg1, IEndpoint jarg1_, long jarg2);
  public final static native String IEndpoint_xml__SWIG_2(long jarg1, IEndpoint jarg1_);
  public final static native long IEndpoint_getFixedEnd(long jarg1, IEndpoint jarg1_);
  public final static native boolean IEndpoint_equals__SWIG_0(long jarg1, IEndpoint jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean IEndpoint_equals__SWIG_1(long jarg1, IEndpoint jarg1_, long jarg2, IEndpoint jarg2_);
  public final static native String EAreaC_str(int jarg1);
  public final static native long EAreaC_vec();
  public final static native int EAreaC_parse(String jarg1);
  public final static native long new_EAreaC();
  public final static native void delete_EAreaC(long jarg1);
  public final static native long new_EAreaVector__SWIG_0();
  public final static native long new_EAreaVector__SWIG_1(long jarg1);
  public final static native long EAreaVector_size(long jarg1, EAreaVector jarg1_);
  public final static native long EAreaVector_capacity(long jarg1, EAreaVector jarg1_);
  public final static native void EAreaVector_reserve(long jarg1, EAreaVector jarg1_, long jarg2);
  public final static native boolean EAreaVector_empty(long jarg1, EAreaVector jarg1_);
  public final static native void EAreaVector_clear(long jarg1, EAreaVector jarg1_);
  public final static native void EAreaVector_pushBack(long jarg1, EAreaVector jarg1_, int jarg2);
  public final static native int EAreaVector_get(long jarg1, EAreaVector jarg1_, int jarg2);
  public final static native void EAreaVector_set(long jarg1, EAreaVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EAreaVector(long jarg1);
  public final static native long new_AreaPart(int jarg1);
  public final static native void delete_AreaPart(long jarg1);
  public final static native int AreaPart_getArea(long jarg1, AreaPart jarg1_);
  public final static native String AreaPart_xml__SWIG_0(long jarg1, AreaPart jarg1_, long jarg2, String jarg3);
  public final static native String AreaPart_xml__SWIG_1(long jarg1, AreaPart jarg1_, long jarg2);
  public final static native String AreaPart_xml__SWIG_2(long jarg1, AreaPart jarg1_);
  public final static native String AreaPart_svg__SWIG_0(long jarg1, AreaPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String AreaPart_svg__SWIG_1(long jarg1, AreaPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long AreaPart_getFixedEnd(long jarg1, AreaPart jarg1_);
  public final static native boolean AreaPart_equals__SWIG_0(long jarg1, AreaPart jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean AreaPart_equals__SWIG_1(long jarg1, AreaPart jarg1_, long jarg2, IEndpoint jarg2_);
  public final static native String ESideC_str(int jarg1);
  public final static native long ESideC_vec();
  public final static native int ESideC_parse(String jarg1);
  public final static native long new_ESideC();
  public final static native void delete_ESideC(long jarg1);
  public final static native long new_ESideVector__SWIG_0();
  public final static native long new_ESideVector__SWIG_1(long jarg1);
  public final static native long ESideVector_size(long jarg1, ESideVector jarg1_);
  public final static native long ESideVector_capacity(long jarg1, ESideVector jarg1_);
  public final static native void ESideVector_reserve(long jarg1, ESideVector jarg1_, long jarg2);
  public final static native boolean ESideVector_empty(long jarg1, ESideVector jarg1_);
  public final static native void ESideVector_clear(long jarg1, ESideVector jarg1_);
  public final static native void ESideVector_pushBack(long jarg1, ESideVector jarg1_, int jarg2);
  public final static native int ESideVector_get(long jarg1, ESideVector jarg1_, int jarg2);
  public final static native void ESideVector_set(long jarg1, ESideVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ESideVector(long jarg1);
  public final static native long new_BodyPart(int jarg1, long jarg2, IPart jarg2_);
  public final static native void delete_BodyPart(long jarg1);
  public final static native int BodyPart_getSide(long jarg1, BodyPart jarg1_);
  public final static native long BodyPart_getPart(long jarg1, BodyPart jarg1_);
  public final static native String BodyPart_xml__SWIG_0(long jarg1, BodyPart jarg1_, long jarg2, String jarg3);
  public final static native String BodyPart_xml__SWIG_1(long jarg1, BodyPart jarg1_, long jarg2);
  public final static native String BodyPart_xml__SWIG_2(long jarg1, BodyPart jarg1_);
  public final static native String BodyPart_svg__SWIG_0(long jarg1, BodyPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String BodyPart_svg__SWIG_1(long jarg1, BodyPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean BodyPart_equals(long jarg1, BodyPart jarg1_, long jarg2, IPreSign jarg2_);
  public final static native void delete_ILimb(long jarg1);
  public final static native String ILimb_xml__SWIG_0(long jarg1, ILimb jarg1_, long jarg2, String jarg3);
  public final static native String ILimb_xml__SWIG_1(long jarg1, ILimb jarg1_, long jarg2);
  public final static native String ILimb_xml__SWIG_2(long jarg1, ILimb jarg1_);
  public final static native boolean ILimb_equals__SWIG_0(long jarg1, ILimb jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean ILimb_equals__SWIG_1(long jarg1, ILimb jarg1_, long jarg2, ILimb jarg2_);
  public final static native long new_CustomLimb__SWIG_0(long jarg1, IEndpoint jarg1_, long jarg2, IEndpoint jarg2_);
  public final static native long new_CustomLimb__SWIG_1(long jarg1, IEndpoint jarg1_);
  public final static native void delete_CustomLimb(long jarg1);
  public final static native long CustomLimb_getFixedEnd(long jarg1, CustomLimb jarg1_);
  public final static native long CustomLimb_getExtremity(long jarg1, CustomLimb jarg1_);
  public final static native String CustomLimb_xml__SWIG_0(long jarg1, CustomLimb jarg1_, long jarg2, String jarg3);
  public final static native String CustomLimb_xml__SWIG_1(long jarg1, CustomLimb jarg1_, long jarg2);
  public final static native String CustomLimb_xml__SWIG_2(long jarg1, CustomLimb jarg1_);
  public final static native String CustomLimb_svg__SWIG_0(long jarg1, CustomLimb jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String CustomLimb_svg__SWIG_1(long jarg1, CustomLimb jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean CustomLimb_equals__SWIG_0(long jarg1, CustomLimb jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean CustomLimb_equals__SWIG_1(long jarg1, CustomLimb jarg1_, long jarg2, ILimb jarg2_);
  public final static native String ELimbC_str(int jarg1);
  public final static native long ELimbC_vec();
  public final static native int ELimbC_parse(String jarg1);
  public final static native long new_ELimbC();
  public final static native void delete_ELimbC(long jarg1);
  public final static native long new_ELimbVector__SWIG_0();
  public final static native long new_ELimbVector__SWIG_1(long jarg1);
  public final static native long ELimbVector_size(long jarg1, ELimbVector jarg1_);
  public final static native long ELimbVector_capacity(long jarg1, ELimbVector jarg1_);
  public final static native void ELimbVector_reserve(long jarg1, ELimbVector jarg1_, long jarg2);
  public final static native boolean ELimbVector_empty(long jarg1, ELimbVector jarg1_);
  public final static native void ELimbVector_clear(long jarg1, ELimbVector jarg1_);
  public final static native void ELimbVector_pushBack(long jarg1, ELimbVector jarg1_, int jarg2);
  public final static native int ELimbVector_get(long jarg1, ELimbVector jarg1_, int jarg2);
  public final static native void ELimbVector_set(long jarg1, ELimbVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ELimbVector(long jarg1);
  public final static native long new_DefaultLimb(int jarg1);
  public final static native void delete_DefaultLimb(long jarg1);
  public final static native int DefaultLimb_getLimb(long jarg1, DefaultLimb jarg1_);
  public final static native String DefaultLimb_xml__SWIG_0(long jarg1, DefaultLimb jarg1_, long jarg2, String jarg3);
  public final static native String DefaultLimb_xml__SWIG_1(long jarg1, DefaultLimb jarg1_, long jarg2);
  public final static native String DefaultLimb_xml__SWIG_2(long jarg1, DefaultLimb jarg1_);
  public final static native String DefaultLimb_svg__SWIG_0(long jarg1, DefaultLimb jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String DefaultLimb_svg__SWIG_1(long jarg1, DefaultLimb jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean DefaultLimb_equals__SWIG_0(long jarg1, DefaultLimb jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean DefaultLimb_equals__SWIG_1(long jarg1, DefaultLimb jarg1_, long jarg2, ILimb jarg2_);
  public final static native String EDigitC_str(int jarg1);
  public final static native long EDigitC_vec();
  public final static native int EDigitC_parse(String jarg1);
  public final static native long new_EDigitC();
  public final static native void delete_EDigitC(long jarg1);
  public final static native long new_EDigitVector__SWIG_0();
  public final static native long new_EDigitVector__SWIG_1(long jarg1);
  public final static native long EDigitVector_size(long jarg1, EDigitVector jarg1_);
  public final static native long EDigitVector_capacity(long jarg1, EDigitVector jarg1_);
  public final static native void EDigitVector_reserve(long jarg1, EDigitVector jarg1_, long jarg2);
  public final static native boolean EDigitVector_empty(long jarg1, EDigitVector jarg1_);
  public final static native void EDigitVector_clear(long jarg1, EDigitVector jarg1_);
  public final static native void EDigitVector_pushBack(long jarg1, EDigitVector jarg1_, int jarg2);
  public final static native int EDigitVector_get(long jarg1, EDigitVector jarg1_, int jarg2);
  public final static native void EDigitVector_set(long jarg1, EDigitVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EDigitVector(long jarg1);
  public final static native long new_DigitPart(int jarg1, long jarg2);
  public final static native void delete_DigitPart(long jarg1);
  public final static native int DigitPart_getDigit(long jarg1, DigitPart jarg1_);
  public final static native long DigitPart_getKnuckle(long jarg1, DigitPart jarg1_);
  public final static native String DigitPart_xml__SWIG_0(long jarg1, DigitPart jarg1_, long jarg2, String jarg3);
  public final static native String DigitPart_xml__SWIG_1(long jarg1, DigitPart jarg1_, long jarg2);
  public final static native String DigitPart_xml__SWIG_2(long jarg1, DigitPart jarg1_);
  public final static native String DigitPart_svg__SWIG_0(long jarg1, DigitPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String DigitPart_svg__SWIG_1(long jarg1, DigitPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long DigitPart_getFixedEnd(long jarg1, DigitPart jarg1_);
  public final static native boolean DigitPart_equals__SWIG_0(long jarg1, DigitPart jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean DigitPart_equals__SWIG_1(long jarg1, DigitPart jarg1_, long jarg2, IEndpoint jarg2_);
  public final static native String ELimbSideC_str(int jarg1);
  public final static native long ELimbSideC_vec();
  public final static native int ELimbSideC_parse(String jarg1);
  public final static native long new_ELimbSideC();
  public final static native void delete_ELimbSideC(long jarg1);
  public final static native long new_ELimbSideVector__SWIG_0();
  public final static native long new_ELimbSideVector__SWIG_1(long jarg1);
  public final static native long ELimbSideVector_size(long jarg1, ELimbSideVector jarg1_);
  public final static native long ELimbSideVector_capacity(long jarg1, ELimbSideVector jarg1_);
  public final static native void ELimbSideVector_reserve(long jarg1, ELimbSideVector jarg1_, long jarg2);
  public final static native boolean ELimbSideVector_empty(long jarg1, ELimbSideVector jarg1_);
  public final static native void ELimbSideVector_clear(long jarg1, ELimbSideVector jarg1_);
  public final static native void ELimbSideVector_pushBack(long jarg1, ELimbSideVector jarg1_, int jarg2);
  public final static native int ELimbSideVector_get(long jarg1, ELimbSideVector jarg1_, int jarg2);
  public final static native void ELimbSideVector_set(long jarg1, ELimbSideVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ELimbSideVector(long jarg1);
  public final static native long new_SurfacePart(int jarg1, long jarg2, ILimb jarg2_);
  public final static native void delete_SurfacePart(long jarg1);
  public final static native int SurfacePart_getLimbSide(long jarg1, SurfacePart jarg1_);
  public final static native long SurfacePart_getLimb(long jarg1, SurfacePart jarg1_);
  public final static native String SurfacePart_xml__SWIG_0(long jarg1, SurfacePart jarg1_, long jarg2, String jarg3);
  public final static native String SurfacePart_xml__SWIG_1(long jarg1, SurfacePart jarg1_, long jarg2);
  public final static native String SurfacePart_xml__SWIG_2(long jarg1, SurfacePart jarg1_);
  public final static native String SurfacePart_svg__SWIG_0(long jarg1, SurfacePart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String SurfacePart_svg__SWIG_1(long jarg1, SurfacePart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean SurfacePart_equals(long jarg1, SurfacePart jarg1_, long jarg2, IPart jarg2_);
  public final static native String EJointC_str(int jarg1);
  public final static native long EJointC_vec();
  public final static native int EJointC_parse(String jarg1);
  public final static native long new_EJointC();
  public final static native void delete_EJointC(long jarg1);
  public final static native long new_EJointVector__SWIG_0();
  public final static native long new_EJointVector__SWIG_1(long jarg1);
  public final static native long EJointVector_size(long jarg1, EJointVector jarg1_);
  public final static native long EJointVector_capacity(long jarg1, EJointVector jarg1_);
  public final static native void EJointVector_reserve(long jarg1, EJointVector jarg1_, long jarg2);
  public final static native boolean EJointVector_empty(long jarg1, EJointVector jarg1_);
  public final static native void EJointVector_clear(long jarg1, EJointVector jarg1_);
  public final static native void EJointVector_pushBack(long jarg1, EJointVector jarg1_, int jarg2);
  public final static native int EJointVector_get(long jarg1, EJointVector jarg1_, int jarg2);
  public final static native void EJointVector_set(long jarg1, EJointVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EJointVector(long jarg1);
  public final static native long new_JointPart(int jarg1);
  public final static native void delete_JointPart(long jarg1);
  public final static native int JointPart_getJoint(long jarg1, JointPart jarg1_);
  public final static native String JointPart_xml__SWIG_0(long jarg1, JointPart jarg1_, long jarg2, String jarg3);
  public final static native String JointPart_xml__SWIG_1(long jarg1, JointPart jarg1_, long jarg2);
  public final static native String JointPart_xml__SWIG_2(long jarg1, JointPart jarg1_);
  public final static native String JointPart_svg__SWIG_0(long jarg1, JointPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String JointPart_svg__SWIG_1(long jarg1, JointPart jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long JointPart_getFixedEnd(long jarg1, JointPart jarg1_);
  public final static native boolean JointPart_equals__SWIG_0(long jarg1, JointPart jarg1_, long jarg2, IPart jarg2_);
  public final static native boolean JointPart_equals__SWIG_1(long jarg1, JointPart jarg1_, long jarg2, IEndpoint jarg2_);
  public final static native long new_Prop__SWIG_0(String jarg1, String jarg2);
  public final static native long new_Prop__SWIG_1(String jarg1);
  public final static native void delete_Prop(long jarg1);
  public final static native String Prop_getName(long jarg1, Prop jarg1_);
  public final static native String Prop_getDescription(long jarg1, Prop jarg1_);
  public final static native String Prop_xml__SWIG_0(long jarg1, Prop jarg1_, long jarg2, String jarg3);
  public final static native String Prop_xml__SWIG_1(long jarg1, Prop jarg1_, long jarg2);
  public final static native String Prop_xml__SWIG_2(long jarg1, Prop jarg1_);
  public final static native String Prop_svg__SWIG_0(long jarg1, Prop jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native String Prop_svg__SWIG_1(long jarg1, Prop jarg1_, String jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native boolean Prop_equals(long jarg1, Prop jarg1_, long jarg2, IPreSign jarg2_);
  public final static native long GeneralEnrichedPose_SWIGSmartPtrUpcast(long jarg1);
  public final static native long FlSkeleton_SWIGSmartPtrUpcast(long jarg1);
  public final static native long FlPoseDetector_SWIGSmartPtrUpcast(long jarg1);
  public final static native long LabanSequenceRecognizer_SWIGSmartPtrUpcast(long jarg1);
  public final static native long LabanSequenceGenerator_SWIGSmartPtrUpcast(long jarg1);
  public final static native long FlMovementController_SWIGUpcast(long jarg1);
  public final static native long Movement_SWIGSmartPtrUpcast(long jarg1);
  public final static native long Path_SWIGSmartPtrUpcast(long jarg1);
  public final static native long RelationshipBow_SWIGSmartPtrUpcast(long jarg1);
  public final static native long Pin_SWIGSmartPtrUpcast(long jarg1);
  public final static native long RoomDirection_SWIGSmartPtrUpcast(long jarg1);
  public final static native long AccentSign_SWIGSmartPtrUpcast(long jarg1);
  public final static native long DynamicSign_SWIGSmartPtrUpcast(long jarg1);
  public final static native long CancellationSymbol_SWIGSmartPtrUpcast(long jarg1);
  public final static native long SpaceMeasurement_SWIGSmartPtrUpcast(long jarg1);
  public final static native long DirectionSymbol_SWIGSmartPtrUpcast(long jarg1);
  public final static native long TurnSymbol_SWIGSmartPtrUpcast(long jarg1);
  public final static native long VibrationSymbol_SWIGSmartPtrUpcast(long jarg1);
  public final static native long IEndpoint_SWIGSmartPtrUpcast(long jarg1);
  public final static native long AreaPart_SWIGSmartPtrUpcast(long jarg1);
  public final static native long BodyPart_SWIGSmartPtrUpcast(long jarg1);
  public final static native long ILimb_SWIGSmartPtrUpcast(long jarg1);
  public final static native long CustomLimb_SWIGSmartPtrUpcast(long jarg1);
  public final static native long DefaultLimb_SWIGSmartPtrUpcast(long jarg1);
  public final static native long DigitPart_SWIGSmartPtrUpcast(long jarg1);
  public final static native long SurfacePart_SWIGSmartPtrUpcast(long jarg1);
  public final static native long JointPart_SWIGSmartPtrUpcast(long jarg1);
  public final static native long Prop_SWIGSmartPtrUpcast(long jarg1);
}
