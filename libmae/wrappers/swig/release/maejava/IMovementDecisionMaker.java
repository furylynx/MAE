/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class IMovementDecisionMaker {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public IMovementDecisionMaker(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(IMovementDecisionMaker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MaeJavaJNI.delete_IMovementDecisionMaker(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setRecognitionTolerance(double tolerance) {
    MaeJavaJNI.IMovementDecisionMaker_setRecognitionTolerance(swigCPtr, this, tolerance);
  }

  public double getRecognitionTolerance() {
    return MaeJavaJNI.IMovementDecisionMaker_getRecognitionTolerance(swigCPtr, this);
  }

  public boolean decideMatch(IMovement stream_item, IMovement stream_item_predecessor, IMovement tree_item, IMovement tree_item_predecessor) {
    return MaeJavaJNI.IMovementDecisionMaker_decideMatch(swigCPtr, this, IMovement.getCPtr(stream_item), stream_item, IMovement.getCPtr(stream_item_predecessor), stream_item_predecessor, IMovement.getCPtr(tree_item), tree_item, IMovement.getCPtr(tree_item_predecessor), tree_item_predecessor);
  }

  public boolean decideInsertion(IMovement add_item, IMovement add_item_predecessor, IMovement tree_item, IMovement tree_item_predecessor) {
    return MaeJavaJNI.IMovementDecisionMaker_decideInsertion(swigCPtr, this, IMovement.getCPtr(add_item), add_item, IMovement.getCPtr(add_item_predecessor), add_item_predecessor, IMovement.getCPtr(tree_item), tree_item, IMovement.getCPtr(tree_item_predecessor), tree_item_predecessor);
  }

  public boolean positionOkay(double dist_to_last, double set_value, boolean check_startpose) {
    return MaeJavaJNI.IMovementDecisionMaker_positionOkay(swigCPtr, this, dist_to_last, set_value, check_startpose);
  }

}
