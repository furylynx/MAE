/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class hierarchy {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public hierarchy(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(hierarchy obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MaeJavaJNI.delete_hierarchy(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public hierarchy() {
    this(MaeJavaJNI.new_hierarchy__SWIG_0(), true);
  }

  public hierarchy(hierarchy_element root) {
    this(MaeJavaJNI.new_hierarchy__SWIG_1(hierarchy_element.getCPtr(root), root), true);
  }

  public hierarchy_element get_root() {
    long cPtr = MaeJavaJNI.hierarchy_get_root(swigCPtr, this);
    return (cPtr == 0) ? null : new hierarchy_element(cPtr, true);
  }

  public void set_root(hierarchy_element root) {
    MaeJavaJNI.hierarchy_set_root(swigCPtr, this, hierarchy_element.getCPtr(root), root);
  }

  public hierarchy_element_vector get_element_sequence() {
    return new hierarchy_element_vector(MaeJavaJNI.hierarchy_get_element_sequence(swigCPtr, this), true);
  }

  public hierarchy_element at(int element_id) {
    long cPtr = MaeJavaJNI.hierarchy_at(swigCPtr, this, element_id);
    return (cPtr == 0) ? null : new hierarchy_element(cPtr, true);
  }

  public String str() {
    return MaeJavaJNI.hierarchy_str(swigCPtr, this);
  }

  public static hierarchy default_hierarchy() {
    long cPtr = MaeJavaJNI.hierarchy_default_hierarchy();
    return (cPtr == 0) ? null : new hierarchy(cPtr, true);
  }

}
