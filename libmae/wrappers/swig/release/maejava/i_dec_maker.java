/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class i_dec_maker {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected i_dec_maker(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(i_dec_maker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        maeJNI.delete_i_dec_maker(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    maeJNI.i_dec_maker_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    maeJNI.i_dec_maker_change_ownership(this, swigCPtr, true);
  }

  public void set_recognition_tolerance(double tolerance) {
    maeJNI.i_dec_maker_set_recognition_tolerance(swigCPtr, this, tolerance);
  }

  public double get_recognition_tolerance() {
    return maeJNI.i_dec_maker_get_recognition_tolerance(swigCPtr, this);
  }

  public boolean decide_match(i_movement stream_item, i_movement stream_item_predecessor, i_movement tree_item, i_movement tree_item_predecessor) {
    return maeJNI.i_dec_maker_decide_match(swigCPtr, this, i_movement.getCPtr(stream_item), stream_item, i_movement.getCPtr(stream_item_predecessor), stream_item_predecessor, i_movement.getCPtr(tree_item), tree_item, i_movement.getCPtr(tree_item_predecessor), tree_item_predecessor);
  }

  public boolean decide_insertion(i_movement add_item, i_movement add_item_predecessor, i_movement tree_item, i_movement tree_item_predecessor) {
    return maeJNI.i_dec_maker_decide_insertion(swigCPtr, this, i_movement.getCPtr(add_item), add_item, i_movement.getCPtr(add_item_predecessor), add_item_predecessor, i_movement.getCPtr(tree_item), tree_item, i_movement.getCPtr(tree_item_predecessor), tree_item_predecessor);
  }

  public boolean position_okay(double dist_to_last, double set_value, boolean check_startpose) {
    return maeJNI.i_dec_maker_position_okay(swigCPtr, this, dist_to_last, set_value, check_startpose);
  }

  public i_dec_maker() {
    this(maeJNI.new_i_dec_maker(), true);
    maeJNI.i_dec_maker_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
