/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class relationship_bow extends i_movement {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  protected relationship_bow(long cPtr, boolean cMemoryOwn) {
    super(maeJNI.relationship_bow_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(relationship_bow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        maeJNI.delete_relationship_bow(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    maeJNI.relationship_bow_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    maeJNI.relationship_bow_change_ownership(this, swigCPtr, true);
  }

  public relationship_bow(e_relationship_type type, boolean grasping, boolean passing, boolean hold, long measure, double beat, relationship_endpoint left_endpoint, relationship_endpoint right_endpoint) {
    this(maeJNI.new_relationship_bow(type.swigValue(), grasping, passing, hold, measure, beat, relationship_endpoint.getCPtr(left_endpoint), left_endpoint, relationship_endpoint.getCPtr(right_endpoint), right_endpoint), true);
    maeJNI.relationship_bow_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public e_relationship_type get_type() {
    return e_relationship_type.swigToEnum(maeJNI.relationship_bow_get_type(swigCPtr, this));
  }

  public boolean get_grasping() {
    return maeJNI.relationship_bow_get_grasping(swigCPtr, this);
  }

  public boolean get_passing() {
    return maeJNI.relationship_bow_get_passing(swigCPtr, this);
  }

  public boolean get_hold() {
    return maeJNI.relationship_bow_get_hold(swigCPtr, this);
  }

  public relationship_endpoint get_left_endpoint() {
    long cPtr = maeJNI.relationship_bow_get_left_endpoint(swigCPtr, this);
    return (cPtr == 0) ? null : new relationship_endpoint(cPtr, true);
  }

  public relationship_endpoint get_right_endpoint() {
    long cPtr = maeJNI.relationship_bow_get_right_endpoint(swigCPtr, this);
    return (cPtr == 0) ? null : new relationship_endpoint(cPtr, true);
  }

  public int get_column() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_get_column(swigCPtr, this) : maeJNI.relationship_bow_get_columnSwigExplicitrelationship_bow(swigCPtr, this);
  }

  public long get_measure() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_get_measure(swigCPtr, this) : maeJNI.relationship_bow_get_measureSwigExplicitrelationship_bow(swigCPtr, this);
  }

  public double get_beat() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_get_beat(swigCPtr, this) : maeJNI.relationship_bow_get_beatSwigExplicitrelationship_bow(swigCPtr, this);
  }

  public double get_duration() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_get_duration(swigCPtr, this) : maeJNI.relationship_bow_get_durationSwigExplicitrelationship_bow(swigCPtr, this);
  }

  public boolean equals(i_movement a) {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_equals(swigCPtr, this, i_movement.getCPtr(a), a) : maeJNI.relationship_bow_equalsSwigExplicitrelationship_bow(swigCPtr, this, i_movement.getCPtr(a), a);
  }

  public boolean symbol_equals(i_movement a) {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_symbol_equals(swigCPtr, this, i_movement.getCPtr(a), a) : maeJNI.relationship_bow_symbol_equalsSwigExplicitrelationship_bow(swigCPtr, this, i_movement.getCPtr(a), a);
  }

  public String xml(long indent, String namesp) {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_xml__SWIG_0(swigCPtr, this, indent, namesp) : maeJNI.relationship_bow_xmlSwigExplicitrelationship_bow__SWIG_0(swigCPtr, this, indent, namesp);
  }

  public String xml(long indent) {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_xml__SWIG_1(swigCPtr, this, indent) : maeJNI.relationship_bow_xmlSwigExplicitrelationship_bow__SWIG_1(swigCPtr, this, indent);
  }

  public String xml() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_xml__SWIG_2(swigCPtr, this) : maeJNI.relationship_bow_xmlSwigExplicitrelationship_bow__SWIG_2(swigCPtr, this);
  }

  public String svg(long im_width, long im_height, long max_column, long measures, long beats_per_measure) {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_svg(swigCPtr, this, im_width, im_height, max_column, measures, beats_per_measure) : maeJNI.relationship_bow_svgSwigExplicitrelationship_bow(swigCPtr, this, im_width, im_height, max_column, measures, beats_per_measure);
  }

  public i_movement recreate(int_int_map column_mapping, long measure, double beat, double duration) {
    long cPtr = (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_recreate(swigCPtr, this, int_int_map.getCPtr(column_mapping), column_mapping, measure, beat, duration) : maeJNI.relationship_bow_recreateSwigExplicitrelationship_bow(swigCPtr, this, int_int_map.getCPtr(column_mapping), column_mapping, measure, beat, duration);
    return (cPtr == 0) ? null : new i_movement(cPtr, true);
  }

  public String str() {
    return (getClass() == relationship_bow.class) ? maeJNI.relationship_bow_str(swigCPtr, this) : maeJNI.relationship_bow_strSwigExplicitrelationship_bow(swigCPtr, this);
  }

}
