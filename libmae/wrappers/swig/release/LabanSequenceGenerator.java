/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package maejava;

public class LabanSequenceGenerator extends LabanSequenceSequenceGenerator {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  public LabanSequenceGenerator(long cPtr, boolean cMemoryOwn) {
    super(MaeJavaJNI.LabanSequenceGenerator_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(LabanSequenceGenerator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        MaeJavaJNI.delete_LabanSequenceGenerator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public LabanSequenceGenerator(boolean debug) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_0(debug), true);
  }

  public LabanSequenceGenerator() {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_1(), true);
  }

  public LabanSequenceGenerator(ColumnDefinitionVector column_definitions, long beats_per_measure, long beat_duration, ETimeUnit time_unit, boolean debug) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_2(ColumnDefinitionVector.getCPtr(column_definitions), column_definitions, beats_per_measure, beat_duration, time_unit.swigValue(), debug), true);
  }

  public LabanSequenceGenerator(ColumnDefinitionVector column_definitions, long beats_per_measure, long beat_duration, ETimeUnit time_unit) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_3(ColumnDefinitionVector.getCPtr(column_definitions), column_definitions, beats_per_measure, beat_duration, time_unit.swigValue()), true);
  }

  public LabanSequenceGenerator(ColumnDefinitionVector column_definitions, long beats_per_measure, long beat_duration) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_4(ColumnDefinitionVector.getCPtr(column_definitions), column_definitions, beats_per_measure, beat_duration), true);
  }

  public LabanSequenceGenerator(ColumnDefinitionVector column_definitions, long beats_per_measure) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_5(ColumnDefinitionVector.getCPtr(column_definitions), column_definitions, beats_per_measure), true);
  }

  public LabanSequenceGenerator(ColumnDefinitionVector column_definitions) {
    this(MaeJavaJNI.new_LabanSequenceGenerator__SWIG_6(ColumnDefinitionVector.getCPtr(column_definitions), column_definitions), true);
  }

  public LabanSequence generateSequence(double framerate, EnrichedPoseList key_poses, BoneVector body_parts) {
    long cPtr = MaeJavaJNI.LabanSequenceGenerator_generateSequence(swigCPtr, this, framerate, EnrichedPoseList.getCPtr(key_poses), key_poses, BoneVector.getCPtr(body_parts), body_parts);
    return (cPtr == 0) ? null : new LabanSequence(cPtr, true);
  }

  public void clearBuffer() {
    MaeJavaJNI.LabanSequenceGenerator_clearBuffer(swigCPtr, this);
  }

}
