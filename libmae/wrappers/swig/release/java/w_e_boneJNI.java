/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class w_e_boneJNI {
  public final static native long new_e_bone_vector__SWIG_0();
  public final static native long new_e_bone_vector__SWIG_1(long jarg1);
  public final static native long e_bone_vector_size(long jarg1, e_bone_vector jarg1_);
  public final static native long e_bone_vector_capacity(long jarg1, e_bone_vector jarg1_);
  public final static native void e_bone_vector_reserve(long jarg1, e_bone_vector jarg1_, long jarg2);
  public final static native boolean e_bone_vector_isEmpty(long jarg1, e_bone_vector jarg1_);
  public final static native void e_bone_vector_clear(long jarg1, e_bone_vector jarg1_);
  public final static native void e_bone_vector_add(long jarg1, e_bone_vector jarg1_, long jarg2);
  public final static native long e_bone_vector_get(long jarg1, e_bone_vector jarg1_, int jarg2);
  public final static native void e_bone_vector_set(long jarg1, e_bone_vector jarg1_, int jarg2, long jarg3);
  public final static native void delete_e_bone_vector(long jarg1);
  public final static native int INVALID_get();
  public final static native int HEAD_get();
  public final static native int LEFT_UPPER_ARM_get();
  public final static native int LEFT_FOREARM_get();
  public final static native int LEFT_WHOLE_ARM_get();
  public final static native int RIGHT_UPPER_ARM_get();
  public final static native int RIGHT_FOREARM_get();
  public final static native int RIGHT_WHOLE_ARM_get();
  public final static native int LEFT_THIGH_get();
  public final static native int LEFT_SHANK_get();
  public final static native int LEFT_WHOLE_LEG_get();
  public final static native int RIGHT_THIGH_get();
  public final static native int RIGHT_SHANK_get();
  public final static native int RIGHT_WHOLE_LEG_get();
  public final static native String e_bone_c_str(int jarg1);
  public final static native int e_bone_c_to_int(int jarg1);
  public final static native long e_bone_c_vec();
  public final static native int e_bone_c_parse(String jarg1);
  public final static native long new_e_bone_c();
  public final static native void delete_e_bone_c(long jarg1);
  public final static native long new_bone_vector__SWIG_0();
  public final static native long new_bone_vector__SWIG_1(long jarg1);
  public final static native long bone_vector_size(long jarg1, bone_vector jarg1_);
  public final static native long bone_vector_capacity(long jarg1, bone_vector jarg1_);
  public final static native void bone_vector_reserve(long jarg1, bone_vector jarg1_, long jarg2);
  public final static native boolean bone_vector_isEmpty(long jarg1, bone_vector jarg1_);
  public final static native void bone_vector_clear(long jarg1, bone_vector jarg1_);
  public final static native void bone_vector_add(long jarg1, bone_vector jarg1_, long jarg2);
  public final static native long bone_vector_get(long jarg1, bone_vector jarg1_, int jarg2);
  public final static native void bone_vector_set(long jarg1, bone_vector jarg1_, int jarg2, long jarg3);
  public final static native void delete_bone_vector(long jarg1);
  public final static native long new_bone__SWIG_0(int jarg1, String jarg2, int jarg3, int jarg4);
  public final static native long new_bone__SWIG_1(int jarg1, String jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void delete_bone(long jarg1);
  public final static native int bone_get_id(long jarg1, bone jarg1_);
  public final static native String bone_get_name(long jarg1, bone jarg1_);
  public final static native int bone_get_from(long jarg1, bone jarg1_);
  public final static native int bone_get_to(long jarg1, bone jarg1_);
  public final static native boolean bone_has_middle_joint(long jarg1, bone jarg1_);
  public final static native int bone_get_middle_joint(long jarg1, bone jarg1_);
  public final static native long bone_default_bones();
  public final static native long bone_create_bone(int jarg1);
  public final static native int bone_RESERVED_TOP_DOWN_get();
  public final static native int bone_RESERVED_RIGHT_LEFT_get();
  public final static native long new_hierarchy_element_vector__SWIG_0();
  public final static native long new_hierarchy_element_vector__SWIG_1(long jarg1);
  public final static native long hierarchy_element_vector_size(long jarg1, hierarchy_element_vector jarg1_);
  public final static native long hierarchy_element_vector_capacity(long jarg1, hierarchy_element_vector jarg1_);
  public final static native void hierarchy_element_vector_reserve(long jarg1, hierarchy_element_vector jarg1_, long jarg2);
  public final static native boolean hierarchy_element_vector_isEmpty(long jarg1, hierarchy_element_vector jarg1_);
  public final static native void hierarchy_element_vector_clear(long jarg1, hierarchy_element_vector jarg1_);
  public final static native void hierarchy_element_vector_add(long jarg1, hierarchy_element_vector jarg1_, long jarg2);
  public final static native long hierarchy_element_vector_get(long jarg1, hierarchy_element_vector jarg1_, int jarg2);
  public final static native void hierarchy_element_vector_set(long jarg1, hierarchy_element_vector jarg1_, int jarg2, long jarg3);
  public final static native void delete_hierarchy_element_vector(long jarg1);
  public final static native long new_hierarchy_element__SWIG_0(int jarg1, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_hierarchy_element__SWIG_1(int jarg1, String jarg2, boolean jarg3);
  public final static native long new_hierarchy_element__SWIG_2(int jarg1, String jarg2);
  public final static native void delete_hierarchy_element(long jarg1);
  public final static native int hierarchy_element_get_id(long jarg1, hierarchy_element jarg1_);
  public final static native String hierarchy_element_get_name(long jarg1, hierarchy_element jarg1_);
  public final static native boolean hierarchy_element_is_torso_joint(long jarg1, hierarchy_element jarg1_);
  public final static native boolean hierarchy_element_is_dummy(long jarg1, hierarchy_element jarg1_);
  public final static native long hierarchy_element_get_parent(long jarg1, hierarchy_element jarg1_);
  public final static native boolean hierarchy_element_is_parent(long jarg1, hierarchy_element jarg1_);
  public final static native boolean hierarchy_element_is_parent_of(long jarg1, hierarchy_element jarg1_, int jarg2);
  public final static native long hierarchy_element_get_children(long jarg1, hierarchy_element jarg1_);
  public final static native void hierarchy_element_push_front__SWIG_0(long jarg1, hierarchy_element jarg1_, long jarg2, boolean jarg3);
  public final static native void hierarchy_element_push_front__SWIG_1(long jarg1, hierarchy_element jarg1_, long jarg2);
  public final static native void hierarchy_element_insert__SWIG_0(long jarg1, hierarchy_element jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native void hierarchy_element_insert__SWIG_1(long jarg1, hierarchy_element jarg1_, long jarg2, long jarg3);
  public final static native void hierarchy_element_push_back__SWIG_0(long jarg1, hierarchy_element jarg1_, long jarg2, boolean jarg3);
  public final static native void hierarchy_element_push_back__SWIG_1(long jarg1, hierarchy_element jarg1_, long jarg2);
  public final static native void hierarchy_element_erase__SWIG_0(long jarg1, hierarchy_element jarg1_, int jarg2, boolean jarg3);
  public final static native void hierarchy_element_erase__SWIG_1(long jarg1, hierarchy_element jarg1_, int jarg2);
  public final static native void hierarchy_element_erase_at__SWIG_0(long jarg1, hierarchy_element jarg1_, long jarg2, boolean jarg3);
  public final static native void hierarchy_element_erase_at__SWIG_1(long jarg1, hierarchy_element jarg1_, long jarg2);
  public final static native void hierarchy_element_clear__SWIG_0(long jarg1, hierarchy_element jarg1_, boolean jarg2);
  public final static native void hierarchy_element_clear__SWIG_1(long jarg1, hierarchy_element jarg1_);
  public final static native long hierarchy_element_get_element_sequence(long jarg1, hierarchy_element jarg1_);
  public final static native String hierarchy_element_str__SWIG_0(long jarg1, hierarchy_element jarg1_, int jarg2);
  public final static native String hierarchy_element_str__SWIG_1(long jarg1, hierarchy_element jarg1_);
  public final static native long new_hierarchy__SWIG_0();
  public final static native long new_hierarchy__SWIG_1(long jarg1);
  public final static native void delete_hierarchy(long jarg1);
  public final static native long hierarchy_get_root(long jarg1, hierarchy jarg1_);
  public final static native void hierarchy_set_root(long jarg1, hierarchy jarg1_, long jarg2);
  public final static native long hierarchy_get_element_sequence(long jarg1, hierarchy jarg1_);
  public final static native long hierarchy_at(long jarg1, hierarchy jarg1_, int jarg2);
  public final static native String hierarchy_str(long jarg1, hierarchy jarg1_);
  public final static native long hierarchy_default_hierarchy();
  public final static native long new_vec3d(double jarg1, double jarg2, double jarg3);
  public final static native void delete_vec3d(long jarg1);
  public final static native void vec3d_set_x(long jarg1, vec3d jarg1_, double jarg2);
  public final static native double vec3d_get_x(long jarg1, vec3d jarg1_);
  public final static native void vec3d_set_y(long jarg1, vec3d jarg1_, double jarg2);
  public final static native double vec3d_get_y(long jarg1, vec3d jarg1_);
  public final static native void vec3d_set_z(long jarg1, vec3d jarg1_, double jarg2);
  public final static native double vec3d_get_z(long jarg1, vec3d jarg1_);
  public final static native String vec3d_str(long jarg1, vec3d jarg1_);
  public final static native void delete_general_joint(long jarg1);
  public final static native long new_general_joint__SWIG_0();
  public final static native long new_general_joint__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_general_joint__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_general_joint__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long new_general_joint__SWIG_4(long jarg1, double jarg2, double jarg3);
  public final static native long new_general_joint__SWIG_5(long jarg1, double jarg2);
  public final static native long new_general_joint__SWIG_6(long jarg1);
  public final static native void general_joint_set_x(long jarg1, general_joint jarg1_, double jarg2);
  public final static native double general_joint_get_x(long jarg1, general_joint jarg1_);
  public final static native void general_joint_set_y(long jarg1, general_joint jarg1_, double jarg2);
  public final static native double general_joint_get_y(long jarg1, general_joint jarg1_);
  public final static native void general_joint_set_z(long jarg1, general_joint jarg1_, double jarg2);
  public final static native double general_joint_get_z(long jarg1, general_joint jarg1_);
  public final static native void general_joint_set_valid(long jarg1, general_joint jarg1_, boolean jarg2);
  public final static native boolean general_joint_is_valid(long jarg1, general_joint jarg1_);
  public final static native void general_joint_set_confidence(long jarg1, general_joint jarg1_, double jarg2);
  public final static native double general_joint_get_confidence(long jarg1, general_joint jarg1_);
  public final static native void general_joint_set_rotation(long jarg1, general_joint jarg1_, double jarg2);
  public final static native double general_joint_get_rotation(long jarg1, general_joint jarg1_);
  public final static native long general_joint_vec(long jarg1, general_joint jarg1_);
  public final static native boolean general_joint_equals__SWIG_0(long jarg1, general_joint jarg1_, long jarg2, general_joint jarg2_);
  public final static native boolean general_joint_equals__SWIG_1(long jarg1, general_joint jarg1_, long jarg2);
  public final static native String general_joint_str(long jarg1, general_joint jarg1_);
  public final static native long new_basis(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void delete_basis(long jarg1);
  public final static native long basis_get_u(long jarg1, basis jarg1_);
  public final static native long basis_get_r(long jarg1, basis jarg1_);
  public final static native long basis_get_t(long jarg1, basis jarg1_);
  public final static native long basis_get_position_vector(long jarg1, basis jarg1_);
  public final static native void basis_set_u(long jarg1, basis jarg1_, long jarg2);
  public final static native void basis_set_r(long jarg1, basis jarg1_, long jarg2);
  public final static native void basis_set_t(long jarg1, basis jarg1_, long jarg2);
  public final static native void basis_set_position_vector(long jarg1, basis jarg1_, long jarg2);
  public final static native String basis_str(long jarg1, basis jarg1_);
  public final static native long new_general_skeleton__SWIG_0();
  public final static native long new_general_skeleton__SWIG_1(long jarg1);
  public final static native void delete_general_skeleton(long jarg1);
  public final static native void general_skeleton_set_joint(long jarg1, general_skeleton jarg1_, int jarg2, long jarg3);
  public final static native long general_skeleton_get_joint(long jarg1, general_skeleton jarg1_, int jarg2);
  public final static native long general_skeleton_get_hierarchy(long jarg1, general_skeleton jarg1_);
  public final static native void general_skeleton_set_hierarchy(long jarg1, general_skeleton jarg1_, long jarg2);
  public final static native void general_skeleton_set_top_down(long jarg1, general_skeleton jarg1_, long jarg2);
  public final static native long general_skeleton_get_top_down(long jarg1, general_skeleton jarg1_);
  public final static native void general_skeleton_set_right_left(long jarg1, general_skeleton jarg1_, long jarg2);
  public final static native long general_skeleton_get_right_left(long jarg1, general_skeleton jarg1_);
  public final static native void general_skeleton_set_weight(long jarg1, general_skeleton jarg1_, long jarg2);
  public final static native long general_skeleton_get_weight(long jarg1, general_skeleton jarg1_);
  public final static native String general_skeleton_str(long jarg1, general_skeleton jarg1_);
  public final static native String general_skeleton_ply_str(long jarg1, general_skeleton jarg1_);
  public final static native void general_skeleton_ply_file(long jarg1, general_skeleton jarg1_, String jarg2);
}
